package ddl

import (
	"github.com/ManyakRus/ddl_from_protobuf/internal/config"
	"github.com/ManyakRus/ddl_from_protobuf/internal/types"
	"strconv"
)

// CreateFiles_Enum - создание одного файла ddl .sql, для enum
func CreateFiles_Enum(Settings *config.SettingsINI, enum1 *types.EnumElement) (string, error) {
	Otvet := ""
	var err error

	//сообщения с 1 полем не нужны
	if len(enum1.EnumConstants) <= 1 {
		return Otvet, err
	}

	TableName := enum1.Name
	TableComments := enum1.Documentation

	Otvet = `
CREATE TABLE IF NOT EXISTS "` + Settings.DB_SCHEMA_NAME + `"."` + TableName + `" (
`
	Otvet = Otvet + Settings.TextEveryTableColumns

	ID_Name := "id"
	ID_SQL_TYPE := "int8"
	Name_Name := "name"
	Name_SQL_Type := "text"
	//
	Otvet = Otvet + "\t" + `"` + ID_Name + `"` + " " + ID_SQL_TYPE + " " + "GENERATED BY DEFAULT AS IDENTITY NOT NULL" + ",\n"
	Otvet = Otvet + "\t" + `"` + Name_Name + `"` + " " + Name_SQL_Type + " NOT NULL" + ",\n"

	//
	ConstraintName := TableName + "_pk"
	TextPrimaryKey := "\t" + `CONSTRAINT "` + ConstraintName + `" PRIMARY KEY ("` + ID_Name + `")` + "\n"
	Otvet = Otvet + TextPrimaryKey + ");\n"

	//CREATE INDEX
	IndexName := TableName + "_" + ID_Name + "_idx"
	Otvet = Otvet + `CREATE INDEX IF NOT EXISTS "` + IndexName + `" ON "` + Settings.DB_SCHEMA_NAME + `"."` + TableName + `" USING btree ("` + ID_Name + `");` + "\n"

	//COMMENT ON TABLE
	Otvet = Otvet + `COMMENT ON TABLE "` + Settings.DB_SCHEMA_NAME + `"."` + TableName + `" IS '` + TableComments + `';` + "\n"

	//COMMENT ON ID
	Otvet = Otvet + `COMMENT ON COLUMN "` + Settings.DB_SCHEMA_NAME + `"."` + TableName + `"."id" IS '` + "Уникальный технический идентификатор" + `';` + "\n"
	Otvet = Otvet + `COMMENT ON COLUMN "` + Settings.DB_SCHEMA_NAME + `"."` + TableName + `"."name" IS '` + "Наименование" + `';` + "\n"

	//insert
	Otvet = Otvet + `INSERT INTO "` + TableName + `"(id, name) VALUES` + "\n"
	//Otvet1 := ""
	Comma := ","
	len1 := len(enum1.EnumConstants)
	for i, constant1 := range enum1.EnumConstants {
		ID := constant1.ID
		sID := strconv.Itoa(ID)
		Name := constant1.Name
		if i == len1-1 {
			Comma = ";"
		}
		Otvet1 := "(" + sID + ", '" + Name + "')" + Comma + "\n"

		//добавим колонку
		Otvet = Otvet + Otvet1

	}

	return Otvet, err
}
