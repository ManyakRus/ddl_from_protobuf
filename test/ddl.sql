
CREATE TABLE IF NOT EXISTS "tin"."access_level" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "access_level_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "access_level_id_idx" ON "tin"."access_level" USING btree ("id");
COMMENT ON TABLE "tin"."access_level" IS 'Уровень доступа к счёту.';
COMMENT ON COLUMN "tin"."access_level"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."access_level"."name" IS 'Наименование';
INSERT INTO "access_level"(id, name) VALUES
(0, 'ACCOUNT_ACCESS_LEVEL_UNSPECIFIED'),
(1, 'ACCOUNT_ACCESS_LEVEL_FULL_ACCESS'),
(2, 'ACCOUNT_ACCESS_LEVEL_READ_ONLY'),
(3, 'ACCOUNT_ACCESS_LEVEL_NO_ACCESS');


CREATE TABLE IF NOT EXISTS "tin"."account_status" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "account_status_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "account_status_id_idx" ON "tin"."account_status" USING btree ("id");
COMMENT ON TABLE "tin"."account_status" IS 'Статус счёта.';
COMMENT ON COLUMN "tin"."account_status"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."account_status"."name" IS 'Наименование';
INSERT INTO "account_status"(id, name) VALUES
(0, 'ACCOUNT_STATUS_UNSPECIFIED'),
(1, 'ACCOUNT_STATUS_NEW'),
(2, 'ACCOUNT_STATUS_OPEN'),
(3, 'ACCOUNT_STATUS_CLOSED');


CREATE TABLE IF NOT EXISTS "tin"."account_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "account_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "account_type_id_idx" ON "tin"."account_type" USING btree ("id");
COMMENT ON TABLE "tin"."account_type" IS 'Тип счёта.';
COMMENT ON COLUMN "tin"."account_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."account_type"."name" IS 'Наименование';
INSERT INTO "account_type"(id, name) VALUES
(0, 'ACCOUNT_TYPE_UNSPECIFIED'),
(1, 'ACCOUNT_TYPE_TINKOFF'),
(2, 'ACCOUNT_TYPE_TINKOFF_IIS'),
(3, 'ACCOUNT_TYPE_INVEST_BOX');


CREATE TABLE IF NOT EXISTS "tin"."asset_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "asset_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "asset_type_id_idx" ON "tin"."asset_type" USING btree ("id");
COMMENT ON TABLE "tin"."asset_type" IS 'Тип актива.';
COMMENT ON COLUMN "tin"."asset_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."asset_type"."name" IS 'Наименование';
INSERT INTO "asset_type"(id, name) VALUES
(0, 'ASSET_TYPE_UNSPECIFIED'),
(1, 'ASSET_TYPE_CURRENCY'),
(2, 'ASSET_TYPE_COMMODITY'),
(3, 'ASSET_TYPE_INDEX'),
(4, 'ASSET_TYPE_SECURITY');


CREATE TABLE IF NOT EXISTS "tin"."candle_interval" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "candle_interval_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "candle_interval_id_idx" ON "tin"."candle_interval" USING btree ("id");
COMMENT ON TABLE "tin"."candle_interval" IS 'Интервал свечей.';
COMMENT ON COLUMN "tin"."candle_interval"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."candle_interval"."name" IS 'Наименование';
INSERT INTO "candle_interval"(id, name) VALUES
(0, 'CANDLE_INTERVAL_UNSPECIFIED'),
(1, 'CANDLE_INTERVAL_1_MIN'),
(2, 'CANDLE_INTERVAL_5_MIN'),
(3, 'CANDLE_INTERVAL_15_MIN'),
(4, 'CANDLE_INTERVAL_HOUR'),
(5, 'CANDLE_INTERVAL_DAY'),
(6, 'CANDLE_INTERVAL_2_MIN'),
(7, 'CANDLE_INTERVAL_3_MIN'),
(8, 'CANDLE_INTERVAL_10_MIN'),
(9, 'CANDLE_INTERVAL_30_MIN'),
(10, 'CANDLE_INTERVAL_2_HOUR'),
(11, 'CANDLE_INTERVAL_4_HOUR'),
(12, 'CANDLE_INTERVAL_WEEK'),
(13, 'CANDLE_INTERVAL_MONTH');


CREATE TABLE IF NOT EXISTS "tin"."coupon_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "coupon_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "coupon_type_id_idx" ON "tin"."coupon_type" USING btree ("id");
COMMENT ON TABLE "tin"."coupon_type" IS 'Тип купонов.';
COMMENT ON COLUMN "tin"."coupon_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."coupon_type"."name" IS 'Наименование';
INSERT INTO "coupon_type"(id, name) VALUES
(0, 'COUPON_TYPE_UNSPECIFIED'),
(1, 'COUPON_TYPE_CONSTANT'),
(2, 'COUPON_TYPE_FLOATING'),
(3, 'COUPON_TYPE_DISCOUNT'),
(4, 'COUPON_TYPE_MORTGAGE'),
(5, 'COUPON_TYPE_FIX'),
(6, 'COUPON_TYPE_VARIABLE'),
(7, 'COUPON_TYPE_OTHER');


CREATE TABLE IF NOT EXISTS "tin"."currency_request" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "currency_request_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "currency_request_id_idx" ON "tin"."currency_request" USING btree ("id");
COMMENT ON TABLE "tin"."currency_request" IS '';
COMMENT ON COLUMN "tin"."currency_request"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."currency_request"."name" IS 'Наименование';
INSERT INTO "currency_request"(id, name) VALUES
(0, 'RUB'),
(1, 'USD'),
(2, 'EUR');


CREATE TABLE IF NOT EXISTS "tin"."edit_favorites_action_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "edit_favorites_action_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "edit_favorites_action_type_id_idx" ON "tin"."edit_favorites_action_type" USING btree ("id");
COMMENT ON TABLE "tin"."edit_favorites_action_type" IS 'Тип действия со списком избранных инструментов.';
COMMENT ON COLUMN "tin"."edit_favorites_action_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."edit_favorites_action_type"."name" IS 'Наименование';
INSERT INTO "edit_favorites_action_type"(id, name) VALUES
(0, 'EDIT_FAVORITES_ACTION_TYPE_UNSPECIFIED'),
(1, 'EDIT_FAVORITES_ACTION_TYPE_ADD'),
(2, 'EDIT_FAVORITES_ACTION_TYPE_DEL');


CREATE TABLE IF NOT EXISTS "tin"."instrument_id_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "instrument_id_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "instrument_id_type_id_idx" ON "tin"."instrument_id_type" USING btree ("id");
COMMENT ON TABLE "tin"."instrument_id_type" IS 'Тип идентификатора инструмента. Подробнее об идентификации инструментов: [Идентификация инструментов](https://tinkoff.github.io/investAPI/faq_identification/)';
COMMENT ON COLUMN "tin"."instrument_id_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."instrument_id_type"."name" IS 'Наименование';
INSERT INTO "instrument_id_type"(id, name) VALUES
(0, 'INSTRUMENT_ID_UNSPECIFIED'),
(1, 'INSTRUMENT_ID_TYPE_FIGI'),
(2, 'INSTRUMENT_ID_TYPE_TICKER'),
(3, 'INSTRUMENT_ID_TYPE_UID'),
(4, 'INSTRUMENT_ID_TYPE_POSITION_UID');


CREATE TABLE IF NOT EXISTS "tin"."instrument_status" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "instrument_status_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "instrument_status_id_idx" ON "tin"."instrument_status" USING btree ("id");
COMMENT ON TABLE "tin"."instrument_status" IS 'Статус запрашиваемых инструментов.';
COMMENT ON COLUMN "tin"."instrument_status"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."instrument_status"."name" IS 'Наименование';
INSERT INTO "instrument_status"(id, name) VALUES
(0, 'INSTRUMENT_STATUS_UNSPECIFIED'),
(1, 'INSTRUMENT_STATUS_BASE'),
(2, 'INSTRUMENT_STATUS_ALL');


CREATE TABLE IF NOT EXISTS "tin"."instrument_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "instrument_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "instrument_type_id_idx" ON "tin"."instrument_type" USING btree ("id");
COMMENT ON TABLE "tin"."instrument_type" IS 'Тип инструмента.';
COMMENT ON COLUMN "tin"."instrument_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."instrument_type"."name" IS 'Наименование';
INSERT INTO "instrument_type"(id, name) VALUES
(0, 'INSTRUMENT_TYPE_UNSPECIFIED'),
(1, 'INSTRUMENT_TYPE_BOND'),
(2, 'INSTRUMENT_TYPE_SHARE'),
(3, 'INSTRUMENT_TYPE_CURRENCY'),
(4, 'INSTRUMENT_TYPE_ETF'),
(5, 'INSTRUMENT_TYPE_FUTURES'),
(6, 'INSTRUMENT_TYPE_SP'),
(7, 'INSTRUMENT_TYPE_OPTION'),
(8, 'INSTRUMENT_TYPE_CLEARING_CERTIFICATE');


CREATE TABLE IF NOT EXISTS "tin"."operation_state" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "operation_state_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "operation_state_id_idx" ON "tin"."operation_state" USING btree ("id");
COMMENT ON TABLE "tin"."operation_state" IS 'Статус запрашиваемых операций.';
COMMENT ON COLUMN "tin"."operation_state"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."operation_state"."name" IS 'Наименование';
INSERT INTO "operation_state"(id, name) VALUES
(0, 'OPERATION_STATE_UNSPECIFIED'),
(1, 'OPERATION_STATE_EXECUTED'),
(2, 'OPERATION_STATE_CANCELED'),
(3, 'OPERATION_STATE_PROGRESS');


CREATE TABLE IF NOT EXISTS "tin"."operation_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "operation_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "operation_type_id_idx" ON "tin"."operation_type" USING btree ("id");
COMMENT ON TABLE "tin"."operation_type" IS 'Тип операции.';
COMMENT ON COLUMN "tin"."operation_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."operation_type"."name" IS 'Наименование';
INSERT INTO "operation_type"(id, name) VALUES
(0, 'OPERATION_TYPE_UNSPECIFIED'),
(1, 'OPERATION_TYPE_INPUT'),
(2, 'OPERATION_TYPE_BOND_TAX'),
(3, 'OPERATION_TYPE_OUTPUT_SECURITIES'),
(4, 'OPERATION_TYPE_OVERNIGHT'),
(5, 'OPERATION_TYPE_TAX'),
(6, 'OPERATION_TYPE_BOND_REPAYMENT_FULL'),
(7, 'OPERATION_TYPE_SELL_CARD'),
(8, 'OPERATION_TYPE_DIVIDEND_TAX'),
(9, 'OPERATION_TYPE_OUTPUT'),
(10, 'OPERATION_TYPE_BOND_REPAYMENT'),
(11, 'OPERATION_TYPE_TAX_CORRECTION'),
(12, 'OPERATION_TYPE_SERVICE_FEE'),
(13, 'OPERATION_TYPE_BENEFIT_TAX'),
(14, 'OPERATION_TYPE_MARGIN_FEE'),
(15, 'OPERATION_TYPE_BUY'),
(16, 'OPERATION_TYPE_BUY_CARD'),
(17, 'OPERATION_TYPE_INPUT_SECURITIES'),
(18, 'OPERATION_TYPE_SELL_MARGIN'),
(19, 'OPERATION_TYPE_BROKER_FEE'),
(20, 'OPERATION_TYPE_BUY_MARGIN'),
(21, 'OPERATION_TYPE_DIVIDEND'),
(22, 'OPERATION_TYPE_SELL'),
(23, 'OPERATION_TYPE_COUPON'),
(24, 'OPERATION_TYPE_SUCCESS_FEE'),
(25, 'OPERATION_TYPE_DIVIDEND_TRANSFER'),
(26, 'OPERATION_TYPE_ACCRUING_VARMARGIN'),
(27, 'OPERATION_TYPE_WRITING_OFF_VARMARGIN'),
(28, 'OPERATION_TYPE_DELIVERY_BUY'),
(29, 'OPERATION_TYPE_DELIVERY_SELL'),
(30, 'OPERATION_TYPE_TRACK_MFEE'),
(31, 'OPERATION_TYPE_TRACK_PFEE'),
(32, 'OPERATION_TYPE_TAX_PROGRESSIVE'),
(33, 'OPERATION_TYPE_BOND_TAX_PROGRESSIVE'),
(34, 'OPERATION_TYPE_DIVIDEND_TAX_PROGRESSIVE'),
(35, 'OPERATION_TYPE_BENEFIT_TAX_PROGRESSIVE'),
(36, 'OPERATION_TYPE_TAX_CORRECTION_PROGRESSIVE'),
(37, 'OPERATION_TYPE_TAX_REPO_PROGRESSIVE'),
(38, 'OPERATION_TYPE_TAX_REPO'),
(39, 'OPERATION_TYPE_TAX_REPO_HOLD'),
(40, 'OPERATION_TYPE_TAX_REPO_REFUND'),
(41, 'OPERATION_TYPE_TAX_REPO_HOLD_PROGRESSIVE'),
(42, 'OPERATION_TYPE_TAX_REPO_REFUND_PROGRESSIVE'),
(43, 'OPERATION_TYPE_DIV_EXT'),
(44, 'OPERATION_TYPE_TAX_CORRECTION_COUPON'),
(45, 'OPERATION_TYPE_CASH_FEE'),
(46, 'OPERATION_TYPE_OUT_FEE'),
(47, 'OPERATION_TYPE_OUT_STAMP_DUTY'),
(50, 'OPERATION_TYPE_OUTPUT_SWIFT'),
(51, 'OPERATION_TYPE_INPUT_SWIFT'),
(53, 'OPERATION_TYPE_OUTPUT_ACQUIRING'),
(54, 'OPERATION_TYPE_INPUT_ACQUIRING'),
(55, 'OPERATION_TYPE_OUTPUT_PENALTY'),
(56, 'OPERATION_TYPE_ADVICE_FEE'),
(57, 'OPERATION_TYPE_TRANS_IIS_BS'),
(58, 'OPERATION_TYPE_TRANS_BS_BS'),
(59, 'OPERATION_TYPE_OUT_MULTI'),
(60, 'OPERATION_TYPE_INP_MULTI'),
(61, 'OPERATION_TYPE_OVER_PLACEMENT'),
(62, 'OPERATION_TYPE_OVER_COM'),
(63, 'OPERATION_TYPE_OVER_INCOME'),
(64, 'OPERATION_TYPE_OPTION_EXPIRATION');


CREATE TABLE IF NOT EXISTS "tin"."option_direction" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "option_direction_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "option_direction_id_idx" ON "tin"."option_direction" USING btree ("id");
COMMENT ON TABLE "tin"."option_direction" IS 'Тип опциона по направлению сделки.';
COMMENT ON COLUMN "tin"."option_direction"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."option_direction"."name" IS 'Наименование';
INSERT INTO "option_direction"(id, name) VALUES
(0, 'OPTION_DIRECTION_UNSPECIFIED'),
(1, 'OPTION_DIRECTION_PUT'),
(2, 'OPTION_DIRECTION_CALL');


CREATE TABLE IF NOT EXISTS "tin"."option_payment_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "option_payment_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "option_payment_type_id_idx" ON "tin"."option_payment_type" USING btree ("id");
COMMENT ON TABLE "tin"."option_payment_type" IS 'Тип расчетов по опциону.';
COMMENT ON COLUMN "tin"."option_payment_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."option_payment_type"."name" IS 'Наименование';
INSERT INTO "option_payment_type"(id, name) VALUES
(0, 'OPTION_PAYMENT_TYPE_UNSPECIFIED'),
(1, 'OPTION_PAYMENT_TYPE_PREMIUM'),
(2, 'OPTION_PAYMENT_TYPE_MARGINAL');


CREATE TABLE IF NOT EXISTS "tin"."option_settlement_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "option_settlement_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "option_settlement_type_id_idx" ON "tin"."option_settlement_type" USING btree ("id");
COMMENT ON TABLE "tin"."option_settlement_type" IS 'Тип опциона по способу исполнения.';
COMMENT ON COLUMN "tin"."option_settlement_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."option_settlement_type"."name" IS 'Наименование';
INSERT INTO "option_settlement_type"(id, name) VALUES
(0, 'OPTION_EXECUTION_TYPE_UNSPECIFIED'),
(1, 'OPTION_EXECUTION_TYPE_PHYSICAL_DELIVERY'),
(2, 'OPTION_EXECUTION_TYPE_CASH_SETTLEMENT');


CREATE TABLE IF NOT EXISTS "tin"."option_style" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "option_style_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "option_style_id_idx" ON "tin"."option_style" USING btree ("id");
COMMENT ON TABLE "tin"."option_style" IS 'Тип опциона по стилю.';
COMMENT ON COLUMN "tin"."option_style"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."option_style"."name" IS 'Наименование';
INSERT INTO "option_style"(id, name) VALUES
(0, 'OPTION_STYLE_UNSPECIFIED'),
(1, 'OPTION_STYLE_AMERICAN'),
(2, 'OPTION_STYLE_EUROPEAN');


CREATE TABLE IF NOT EXISTS "tin"."order_direction" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "order_direction_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "order_direction_id_idx" ON "tin"."order_direction" USING btree ("id");
COMMENT ON TABLE "tin"."order_direction" IS 'Направление операции.';
COMMENT ON COLUMN "tin"."order_direction"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."order_direction"."name" IS 'Наименование';
INSERT INTO "order_direction"(id, name) VALUES
(0, 'ORDER_DIRECTION_UNSPECIFIED'),
(1, 'ORDER_DIRECTION_BUY'),
(2, 'ORDER_DIRECTION_SELL');


CREATE TABLE IF NOT EXISTS "tin"."order_execution_report_status" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "order_execution_report_status_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "order_execution_report_status_id_idx" ON "tin"."order_execution_report_status" USING btree ("id");
COMMENT ON TABLE "tin"."order_execution_report_status" IS 'Текущий статус заявки (поручения)';
COMMENT ON COLUMN "tin"."order_execution_report_status"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."order_execution_report_status"."name" IS 'Наименование';
INSERT INTO "order_execution_report_status"(id, name) VALUES
(0, 'EXECUTION_REPORT_STATUS_UNSPECIFIED'),
(1, 'EXECUTION_REPORT_STATUS_FILL'),
(2, 'EXECUTION_REPORT_STATUS_REJECTED'),
(3, 'EXECUTION_REPORT_STATUS_CANCELLED'),
(4, 'EXECUTION_REPORT_STATUS_NEW'),
(5, 'EXECUTION_REPORT_STATUS_PARTIALLYFILL');


CREATE TABLE IF NOT EXISTS "tin"."order_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "order_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "order_type_id_idx" ON "tin"."order_type" USING btree ("id");
COMMENT ON TABLE "tin"."order_type" IS 'Тип заявки.';
COMMENT ON COLUMN "tin"."order_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."order_type"."name" IS 'Наименование';
INSERT INTO "order_type"(id, name) VALUES
(0, 'ORDER_TYPE_UNSPECIFIED'),
(1, 'ORDER_TYPE_LIMIT'),
(2, 'ORDER_TYPE_MARKET'),
(3, 'ORDER_TYPE_BESTPRICE');


CREATE TABLE IF NOT EXISTS "tin"."portfolio_subscription_status" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "portfolio_subscription_status_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "portfolio_subscription_status_id_idx" ON "tin"."portfolio_subscription_status" USING btree ("id");
COMMENT ON TABLE "tin"."portfolio_subscription_status" IS 'Результат подписки.';
COMMENT ON COLUMN "tin"."portfolio_subscription_status"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."portfolio_subscription_status"."name" IS 'Наименование';
INSERT INTO "portfolio_subscription_status"(id, name) VALUES
(0, 'PORTFOLIO_SUBSCRIPTION_STATUS_UNSPECIFIED'),
(1, 'PORTFOLIO_SUBSCRIPTION_STATUS_SUCCESS'),
(2, 'PORTFOLIO_SUBSCRIPTION_STATUS_ACCOUNT_NOT_FOUND'),
(3, 'PORTFOLIO_SUBSCRIPTION_STATUS_INTERNAL_ERROR');


CREATE TABLE IF NOT EXISTS "tin"."positions_account_subscription_status" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "positions_account_subscription_status_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "positions_account_subscription_status_id_idx" ON "tin"."positions_account_subscription_status" USING btree ("id");
COMMENT ON TABLE "tin"."positions_account_subscription_status" IS 'Результат подписки.';
COMMENT ON COLUMN "tin"."positions_account_subscription_status"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."positions_account_subscription_status"."name" IS 'Наименование';
INSERT INTO "positions_account_subscription_status"(id, name) VALUES
(0, 'POSITIONS_SUBSCRIPTION_STATUS_UNSPECIFIED'),
(1, 'POSITIONS_SUBSCRIPTION_STATUS_SUCCESS'),
(2, 'POSITIONS_SUBSCRIPTION_STATUS_ACCOUNT_NOT_FOUND'),
(3, 'POSITIONS_SUBSCRIPTION_STATUS_INTERNAL_ERROR');


CREATE TABLE IF NOT EXISTS "tin"."price_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "price_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "price_type_id_idx" ON "tin"."price_type" USING btree ("id");
COMMENT ON TABLE "tin"."price_type" IS 'Тип цены.';
COMMENT ON COLUMN "tin"."price_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."price_type"."name" IS 'Наименование';
INSERT INTO "price_type"(id, name) VALUES
(0, 'PRICE_TYPE_UNSPECIFIED'),
(1, 'PRICE_TYPE_POINT'),
(2, 'PRICE_TYPE_CURRENCY');


CREATE TABLE IF NOT EXISTS "tin"."real_exchange" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "real_exchange_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "real_exchange_id_idx" ON "tin"."real_exchange" USING btree ("id");
COMMENT ON TABLE "tin"."real_exchange" IS 'Реальная площадка исполнения расчётов.';
COMMENT ON COLUMN "tin"."real_exchange"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."real_exchange"."name" IS 'Наименование';
INSERT INTO "real_exchange"(id, name) VALUES
(0, 'REAL_EXCHANGE_UNSPECIFIED'),
(1, 'REAL_EXCHANGE_MOEX'),
(2, 'REAL_EXCHANGE_RTS'),
(3, 'REAL_EXCHANGE_OTC');


CREATE TABLE IF NOT EXISTS "tin"."risk_level" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "risk_level_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "risk_level_id_idx" ON "tin"."risk_level" USING btree ("id");
COMMENT ON TABLE "tin"."risk_level" IS 'Уровень риска облигации.';
COMMENT ON COLUMN "tin"."risk_level"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."risk_level"."name" IS 'Наименование';
INSERT INTO "risk_level"(id, name) VALUES
(0, 'RISK_LEVEL_UNSPECIFIED'),
(1, 'RISK_LEVEL_LOW'),
(2, 'RISK_LEVEL_MODERATE'),
(3, 'RISK_LEVEL_HIGH');


CREATE TABLE IF NOT EXISTS "tin"."security_trading_status" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "security_trading_status_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "security_trading_status_id_idx" ON "tin"."security_trading_status" USING btree ("id");
COMMENT ON TABLE "tin"."security_trading_status" IS 'Режим торгов инструмента';
COMMENT ON COLUMN "tin"."security_trading_status"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."security_trading_status"."name" IS 'Наименование';
INSERT INTO "security_trading_status"(id, name) VALUES
(0, 'SECURITY_TRADING_STATUS_UNSPECIFIED'),
(1, 'SECURITY_TRADING_STATUS_NOT_AVAILABLE_FOR_TRADING'),
(2, 'SECURITY_TRADING_STATUS_OPENING_PERIOD'),
(3, 'SECURITY_TRADING_STATUS_CLOSING_PERIOD'),
(4, 'SECURITY_TRADING_STATUS_BREAK_IN_TRADING'),
(5, 'SECURITY_TRADING_STATUS_NORMAL_TRADING'),
(6, 'SECURITY_TRADING_STATUS_CLOSING_AUCTION'),
(7, 'SECURITY_TRADING_STATUS_DARK_POOL_AUCTION'),
(8, 'SECURITY_TRADING_STATUS_DISCRETE_AUCTION'),
(9, 'SECURITY_TRADING_STATUS_OPENING_AUCTION_PERIOD'),
(10, 'SECURITY_TRADING_STATUS_TRADING_AT_CLOSING_AUCTION_PRICE'),
(11, 'SECURITY_TRADING_STATUS_SESSION_ASSIGNED'),
(12, 'SECURITY_TRADING_STATUS_SESSION_CLOSE'),
(13, 'SECURITY_TRADING_STATUS_SESSION_OPEN'),
(14, 'SECURITY_TRADING_STATUS_DEALER_NORMAL_TRADING'),
(15, 'SECURITY_TRADING_STATUS_DEALER_BREAK_IN_TRADING'),
(16, 'SECURITY_TRADING_STATUS_DEALER_NOT_AVAILABLE_FOR_TRADING');


CREATE TABLE IF NOT EXISTS "tin"."share_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "share_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "share_type_id_idx" ON "tin"."share_type" USING btree ("id");
COMMENT ON TABLE "tin"."share_type" IS 'Тип акций.';
COMMENT ON COLUMN "tin"."share_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."share_type"."name" IS 'Наименование';
INSERT INTO "share_type"(id, name) VALUES
(0, 'SHARE_TYPE_UNSPECIFIED'),
(1, 'SHARE_TYPE_COMMON'),
(2, 'SHARE_TYPE_PREFERRED'),
(3, 'SHARE_TYPE_ADR'),
(4, 'SHARE_TYPE_GDR'),
(5, 'SHARE_TYPE_MLP'),
(6, 'SHARE_TYPE_NY_REG_SHRS'),
(7, 'SHARE_TYPE_CLOSED_END_FUND'),
(8, 'SHARE_TYPE_REIT');


CREATE TABLE IF NOT EXISTS "tin"."stop_order_direction" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "stop_order_direction_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "stop_order_direction_id_idx" ON "tin"."stop_order_direction" USING btree ("id");
COMMENT ON TABLE "tin"."stop_order_direction" IS 'Направление сделки стоп-заявки.';
COMMENT ON COLUMN "tin"."stop_order_direction"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."stop_order_direction"."name" IS 'Наименование';
INSERT INTO "stop_order_direction"(id, name) VALUES
(0, 'STOP_ORDER_DIRECTION_UNSPECIFIED'),
(1, 'STOP_ORDER_DIRECTION_BUY'),
(2, 'STOP_ORDER_DIRECTION_SELL');


CREATE TABLE IF NOT EXISTS "tin"."stop_order_expiration_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "stop_order_expiration_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "stop_order_expiration_type_id_idx" ON "tin"."stop_order_expiration_type" USING btree ("id");
COMMENT ON TABLE "tin"."stop_order_expiration_type" IS 'Тип экспирации стоп-заявке.';
COMMENT ON COLUMN "tin"."stop_order_expiration_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."stop_order_expiration_type"."name" IS 'Наименование';
INSERT INTO "stop_order_expiration_type"(id, name) VALUES
(0, 'STOP_ORDER_EXPIRATION_TYPE_UNSPECIFIED'),
(1, 'STOP_ORDER_EXPIRATION_TYPE_GOOD_TILL_CANCEL'),
(2, 'STOP_ORDER_EXPIRATION_TYPE_GOOD_TILL_DATE');


CREATE TABLE IF NOT EXISTS "tin"."stop_order_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "stop_order_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "stop_order_type_id_idx" ON "tin"."stop_order_type" USING btree ("id");
COMMENT ON TABLE "tin"."stop_order_type" IS 'Тип стоп-заявки.';
COMMENT ON COLUMN "tin"."stop_order_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."stop_order_type"."name" IS 'Наименование';
INSERT INTO "stop_order_type"(id, name) VALUES
(0, 'STOP_ORDER_TYPE_UNSPECIFIED'),
(1, 'STOP_ORDER_TYPE_TAKE_PROFIT'),
(2, 'STOP_ORDER_TYPE_STOP_LOSS'),
(3, 'STOP_ORDER_TYPE_STOP_LIMIT');


CREATE TABLE IF NOT EXISTS "tin"."structured_product_type" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "structured_product_type_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "structured_product_type_id_idx" ON "tin"."structured_product_type" USING btree ("id");
COMMENT ON TABLE "tin"."structured_product_type" IS 'Тип структурной ноты.';
COMMENT ON COLUMN "tin"."structured_product_type"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."structured_product_type"."name" IS 'Наименование';
INSERT INTO "structured_product_type"(id, name) VALUES
(0, 'SP_TYPE_UNSPECIFIED'),
(1, 'SP_TYPE_DELIVERABLE'),
(2, 'SP_TYPE_NON_DELIVERABLE');


CREATE TABLE IF NOT EXISTS "tin"."subscription_action" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "subscription_action_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "subscription_action_id_idx" ON "tin"."subscription_action" USING btree ("id");
COMMENT ON TABLE "tin"."subscription_action" IS 'Тип операции со списком подписок.';
COMMENT ON COLUMN "tin"."subscription_action"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."subscription_action"."name" IS 'Наименование';
INSERT INTO "subscription_action"(id, name) VALUES
(0, 'SUBSCRIPTION_ACTION_UNSPECIFIED'),
(1, 'SUBSCRIPTION_ACTION_SUBSCRIBE'),
(2, 'SUBSCRIPTION_ACTION_UNSUBSCRIBE');


CREATE TABLE IF NOT EXISTS "tin"."subscription_interval" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "subscription_interval_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "subscription_interval_id_idx" ON "tin"."subscription_interval" USING btree ("id");
COMMENT ON TABLE "tin"."subscription_interval" IS 'Интервал свечи.';
COMMENT ON COLUMN "tin"."subscription_interval"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."subscription_interval"."name" IS 'Наименование';
INSERT INTO "subscription_interval"(id, name) VALUES
(0, 'SUBSCRIPTION_INTERVAL_UNSPECIFIED'),
(1, 'SUBSCRIPTION_INTERVAL_ONE_MINUTE'),
(2, 'SUBSCRIPTION_INTERVAL_FIVE_MINUTES');


CREATE TABLE IF NOT EXISTS "tin"."subscription_status" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "subscription_status_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "subscription_status_id_idx" ON "tin"."subscription_status" USING btree ("id");
COMMENT ON TABLE "tin"."subscription_status" IS 'Результат подписки.';
COMMENT ON COLUMN "tin"."subscription_status"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."subscription_status"."name" IS 'Наименование';
INSERT INTO "subscription_status"(id, name) VALUES
(0, 'SUBSCRIPTION_STATUS_UNSPECIFIED'),
(1, 'SUBSCRIPTION_STATUS_SUCCESS'),
(2, 'SUBSCRIPTION_STATUS_INSTRUMENT_NOT_FOUND'),
(3, 'SUBSCRIPTION_STATUS_SUBSCRIPTION_ACTION_IS_INVALID'),
(4, 'SUBSCRIPTION_STATUS_DEPTH_IS_INVALID'),
(5, 'SUBSCRIPTION_STATUS_INTERVAL_IS_INVALID'),
(6, 'SUBSCRIPTION_STATUS_LIMIT_IS_EXCEEDED'),
(7, 'SUBSCRIPTION_STATUS_INTERNAL_ERROR'),
(8, 'SUBSCRIPTION_STATUS_TOO_MANY_REQUESTS');


CREATE TABLE IF NOT EXISTS "tin"."trade_direction" (
	"id" int8 GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"name" text NOT NULL,
	CONSTRAINT "trade_direction_pk" PRIMARY KEY ("id")
);
CREATE INDEX IF NOT EXISTS "trade_direction_id_idx" ON "tin"."trade_direction" USING btree ("id");
COMMENT ON TABLE "tin"."trade_direction" IS 'Направление сделки.';
COMMENT ON COLUMN "tin"."trade_direction"."id" IS 'Уникальный технический идентификатор';
COMMENT ON COLUMN "tin"."trade_direction"."name" IS 'Наименование';
INSERT INTO "trade_direction"(id, name) VALUES
(0, 'TRADE_DIRECTION_UNSPECIFIED'),
(1, 'TRADE_DIRECTION_BUY'),
(2, 'TRADE_DIRECTION_SELL');


CREATE TABLE IF NOT EXISTS "tin"."asset_etf" (
	"total_expense_units" bigint NULL,
	"total_expense_nano" integer NULL,
	"hurdle_rate_units" bigint NULL,
	"hurdle_rate_nano" integer NULL,
	"performance_fee_units" bigint NULL,
	"performance_fee_nano" integer NULL,
	"fixed_commission_units" bigint NULL,
	"fixed_commission_nano" integer NULL,
	"payment_type" text NOT NULL,
	"watermark_flag" bool NOT NULL,
	"buy_premium_units" bigint NULL,
	"buy_premium_nano" integer NULL,
	"sell_discount_units" bigint NULL,
	"sell_discount_nano" integer NULL,
	"rebalancing_flag" bool NOT NULL,
	"rebalancing_freq" text NOT NULL,
	"management_type" text NOT NULL,
	"primary_index" text NOT NULL,
	"focus_type" text NOT NULL,
	"leveraged_flag" bool NOT NULL,
	"num_share_units" bigint NULL,
	"num_share_nano" integer NULL,
	"ucits_flag" bool NOT NULL,
	"released_date" timestamptz NULL,
	"description" text NOT NULL,
	"primary_index_description" text NOT NULL,
	"primary_index_company" text NOT NULL,
	"index_recovery_period_units" bigint NULL,
	"index_recovery_period_nano" integer NULL,
	"inav_code" text NOT NULL,
	"div_yield_flag" bool NOT NULL,
	"expense_commission_units" bigint NULL,
	"expense_commission_nano" integer NULL,
	"primary_index_tracking_error_units" bigint NULL,
	"primary_index_tracking_error_nano" integer NULL,
	"rebalancing_plan" text NOT NULL,
	"tax_rate" text NOT NULL,
	"issue_kind" text NOT NULL,
	"nominal_units" bigint NULL,
	"nominal_nano" integer NULL,
	"nominal_currency" text NOT NULL,
	CONSTRAINT "asset_etf_pk" PRIMARY KEY ("primary_index")
);
COMMENT ON TABLE "tin"."asset_etf" IS 'Фонд.';
COMMENT ON COLUMN "tin"."asset_etf"."total_expense_units" IS 'Суммарные расходы фонда (в %). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."total_expense_nano" IS 'Суммарные расходы фонда (в %). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."hurdle_rate_units" IS 'Барьерная ставка доходности после которой фонд имеет право на perfomance fee (в процентах). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."hurdle_rate_nano" IS 'Барьерная ставка доходности после которой фонд имеет право на perfomance fee (в процентах). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."performance_fee_units" IS 'Комиссия за успешные результаты фонда (в процентах). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."performance_fee_nano" IS 'Комиссия за успешные результаты фонда (в процентах). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."fixed_commission_units" IS 'Фиксированная комиссия за управление (в процентах). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."fixed_commission_nano" IS 'Фиксированная комиссия за управление (в процентах). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."payment_type" IS 'Тип распределения доходов от выплат по бумагам.';
COMMENT ON COLUMN "tin"."asset_etf"."watermark_flag" IS 'Признак необходимости выхода фонда в плюс для получения комиссии.';
COMMENT ON COLUMN "tin"."asset_etf"."buy_premium_units" IS 'Премия (надбавка к цене) при покупке доли в фонде (в процентах). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."buy_premium_nano" IS 'Премия (надбавка к цене) при покупке доли в фонде (в процентах). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."sell_discount_units" IS 'Ставка дисконта (вычет из цены) при продаже доли в фонде (в процентах). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."sell_discount_nano" IS 'Ставка дисконта (вычет из цены) при продаже доли в фонде (в процентах). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."rebalancing_flag" IS 'Признак ребалансируемости портфеля фонда.';
COMMENT ON COLUMN "tin"."asset_etf"."rebalancing_freq" IS 'Периодичность ребалансировки.';
COMMENT ON COLUMN "tin"."asset_etf"."management_type" IS 'Тип управления.';
COMMENT ON COLUMN "tin"."asset_etf"."primary_index" IS 'Индекс, который реплицирует (старается копировать) фонд.';
COMMENT ON COLUMN "tin"."asset_etf"."focus_type" IS 'База ETF.';
COMMENT ON COLUMN "tin"."asset_etf"."leveraged_flag" IS 'Признак использования заемных активов (плечо).';
COMMENT ON COLUMN "tin"."asset_etf"."num_share_units" IS 'Количество акций в обращении. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."num_share_nano" IS 'Количество акций в обращении. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."ucits_flag" IS 'Признак обязательства по отчетности перед регулятором.';
COMMENT ON COLUMN "tin"."asset_etf"."released_date" IS 'Дата выпуска.';
COMMENT ON COLUMN "tin"."asset_etf"."description" IS 'Описание фонда.';
COMMENT ON COLUMN "tin"."asset_etf"."primary_index_description" IS 'Описание индекса, за которым следует фонд.';
COMMENT ON COLUMN "tin"."asset_etf"."primary_index_company" IS 'Основные компании, в которые вкладывается фонд.';
COMMENT ON COLUMN "tin"."asset_etf"."index_recovery_period_units" IS 'Срок восстановления индекса (после просадки). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."index_recovery_period_nano" IS 'Срок восстановления индекса (после просадки). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."inav_code" IS 'IVAV-код.';
COMMENT ON COLUMN "tin"."asset_etf"."div_yield_flag" IS 'Признак наличия дивидендной доходности.';
COMMENT ON COLUMN "tin"."asset_etf"."expense_commission_units" IS 'Комиссия на покрытие расходов фонда (в процентах). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."expense_commission_nano" IS 'Комиссия на покрытие расходов фонда (в процентах). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."primary_index_tracking_error_units" IS 'Ошибка следования за индексом (в процентах). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."primary_index_tracking_error_nano" IS 'Ошибка следования за индексом (в процентах). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."rebalancing_plan" IS 'Плановая ребалансировка портфеля.';
COMMENT ON COLUMN "tin"."asset_etf"."tax_rate" IS 'Ставки налогообложения дивидендов и купонов.';
COMMENT ON COLUMN "tin"."asset_etf"."issue_kind" IS 'Форма выпуска.';
COMMENT ON COLUMN "tin"."asset_etf"."nominal_units" IS 'Номинал. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."nominal_nano" IS 'Номинал. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_etf"."nominal_currency" IS 'Валюта номинала.';

CREATE TABLE IF NOT EXISTS "tin"."brand" (
	"uid" text NOT NULL,
	"name" text NOT NULL,
	"description" text NOT NULL,
	"info" text NOT NULL,
	"company" text NOT NULL,
	"sector" text NOT NULL,
	"country_of_risk" text NOT NULL,
	"country_of_risk_name" text NOT NULL,
	CONSTRAINT "brand_pk" PRIMARY KEY ("uid")
);
COMMENT ON TABLE "tin"."brand" IS 'Бренд.';
COMMENT ON COLUMN "tin"."brand"."uid" IS 'uid идентификатор бренда.';
COMMENT ON COLUMN "tin"."brand"."name" IS 'Наименование бренда.';
COMMENT ON COLUMN "tin"."brand"."description" IS 'Описание.';
COMMENT ON COLUMN "tin"."brand"."info" IS 'Информация о бренде.';
COMMENT ON COLUMN "tin"."brand"."company" IS 'Компания.';
COMMENT ON COLUMN "tin"."brand"."sector" IS 'Сектор.';
COMMENT ON COLUMN "tin"."brand"."country_of_risk" IS 'Код страны риска.';
COMMENT ON COLUMN "tin"."brand"."country_of_risk_name" IS 'Наименование страны риска.';

CREATE TABLE IF NOT EXISTS "tin"."broker_report" (
	"trade_id" text NOT NULL,
	"order_id" text NOT NULL,
	"figi" text NOT NULL,
	"execute_sign" text NOT NULL,
	"trade_datetime" timestamptz NULL,
	"exchange" text NOT NULL,
	"class_code" text NOT NULL,
	"direction" text NOT NULL,
	"name" text NOT NULL,
	"ticker" text NOT NULL,
	"price_currency" text NULL,
	"price_units" bigint NULL,
	"price_nano" integer NULL,
	"quantity" bigint NOT NULL,
	"order_amount_currency" text NULL,
	"order_amount_units" bigint NULL,
	"order_amount_nano" integer NULL,
	"aci_value_units" bigint NULL,
	"aci_value_nano" integer NULL,
	"total_order_amount_currency" text NULL,
	"total_order_amount_units" bigint NULL,
	"total_order_amount_nano" integer NULL,
	"broker_commission_currency" text NULL,
	"broker_commission_units" bigint NULL,
	"broker_commission_nano" integer NULL,
	"exchange_commission_currency" text NULL,
	"exchange_commission_units" bigint NULL,
	"exchange_commission_nano" integer NULL,
	"exchange_clearing_commission_currency" text NULL,
	"exchange_clearing_commission_units" bigint NULL,
	"exchange_clearing_commission_nano" integer NULL,
	"repo_rate_units" bigint NULL,
	"repo_rate_nano" integer NULL,
	"party" text NOT NULL,
	"clear_value_date" timestamptz NULL,
	"sec_value_date" timestamptz NULL,
	"broker_status" text NOT NULL,
	"separate_agreement_type" text NOT NULL,
	"separate_agreement_number" text NOT NULL,
	"separate_agreement_date" text NOT NULL,
	"delivery_type" text NOT NULL,
	CONSTRAINT "broker_report_pk" PRIMARY KEY ("trade_id")
);
COMMENT ON TABLE "tin"."broker_report" IS '';
COMMENT ON COLUMN "tin"."broker_report"."trade_id" IS 'Номер сделки.';
COMMENT ON COLUMN "tin"."broker_report"."order_id" IS 'Номер поручения.';
COMMENT ON COLUMN "tin"."broker_report"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."broker_report"."execute_sign" IS 'Признак исполнения.';
COMMENT ON COLUMN "tin"."broker_report"."trade_datetime" IS 'Дата и время заключения в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."broker_report"."exchange" IS 'Торговая площадка.';
COMMENT ON COLUMN "tin"."broker_report"."class_code" IS 'Режим торгов.';
COMMENT ON COLUMN "tin"."broker_report"."direction" IS 'Вид сделки.';
COMMENT ON COLUMN "tin"."broker_report"."name" IS 'Сокращённое наименование актива.';
COMMENT ON COLUMN "tin"."broker_report"."ticker" IS 'Код актива.';
COMMENT ON COLUMN "tin"."broker_report"."price_currency" IS 'Цена за единицу. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."broker_report"."price_units" IS 'Цена за единицу. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."price_nano" IS 'Цена за единицу. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."quantity" IS 'Количество.';
COMMENT ON COLUMN "tin"."broker_report"."order_amount_currency" IS 'Сумма (без НКД). / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."broker_report"."order_amount_units" IS 'Сумма (без НКД). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."order_amount_nano" IS 'Сумма (без НКД). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."aci_value_units" IS 'НКД. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."aci_value_nano" IS 'НКД. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."total_order_amount_currency" IS 'Сумма сделки. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."broker_report"."total_order_amount_units" IS 'Сумма сделки. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."total_order_amount_nano" IS 'Сумма сделки. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."broker_commission_currency" IS 'Комиссия брокера. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."broker_report"."broker_commission_units" IS 'Комиссия брокера. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."broker_commission_nano" IS 'Комиссия брокера. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."exchange_commission_currency" IS 'Комиссия биржи. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."broker_report"."exchange_commission_units" IS 'Комиссия биржи. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."exchange_commission_nano" IS 'Комиссия биржи. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."exchange_clearing_commission_currency" IS 'Комиссия клир. центра. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."broker_report"."exchange_clearing_commission_units" IS 'Комиссия клир. центра. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."exchange_clearing_commission_nano" IS 'Комиссия клир. центра. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."repo_rate_units" IS 'Ставка РЕПО (%). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."repo_rate_nano" IS 'Ставка РЕПО (%). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."broker_report"."party" IS 'Контрагент/Брокер.';
COMMENT ON COLUMN "tin"."broker_report"."clear_value_date" IS 'Дата расчётов в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."broker_report"."sec_value_date" IS 'Дата поставки в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."broker_report"."broker_status" IS 'Статус брокера.';
COMMENT ON COLUMN "tin"."broker_report"."separate_agreement_type" IS 'Тип дог.';
COMMENT ON COLUMN "tin"."broker_report"."separate_agreement_number" IS 'Номер дог.';
COMMENT ON COLUMN "tin"."broker_report"."separate_agreement_date" IS 'Дата дог.';
COMMENT ON COLUMN "tin"."broker_report"."delivery_type" IS 'Тип расчёта по сделке.';

CREATE TABLE IF NOT EXISTS "tin"."get_accrued_interests_request" (
	"figi" text NOT NULL,
	"from" timestamptz NULL,
	"to" timestamptz NULL,
	CONSTRAINT "get_accrued_interests_request_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."get_accrued_interests_request" IS 'Запрос НКД по облигации';
COMMENT ON COLUMN "tin"."get_accrued_interests_request"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."get_accrued_interests_request"."from" IS 'Начало запрашиваемого периода в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."get_accrued_interests_request"."to" IS 'Окончание запрашиваемого периода в часовом поясе UTC.';

CREATE TABLE IF NOT EXISTS "tin"."get_bond_coupons_request" (
	"figi" text NOT NULL,
	"from" timestamptz NULL,
	"to" timestamptz NULL,
	CONSTRAINT "get_bond_coupons_request_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."get_bond_coupons_request" IS 'Запрос купонов по облигации.';
COMMENT ON COLUMN "tin"."get_bond_coupons_request"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."get_bond_coupons_request"."from" IS 'Начало запрашиваемого периода в часовом поясе UTC. Фильтрация по coupon_date (дата выплаты купона)';
COMMENT ON COLUMN "tin"."get_bond_coupons_request"."to" IS 'Окончание запрашиваемого периода в часовом поясе UTC. Фильтрация по coupon_date (дата выплаты купона)';

CREATE TABLE IF NOT EXISTS "tin"."get_dividends_request" (
	"figi" text NOT NULL,
	"from" timestamptz NULL,
	"to" timestamptz NULL,
	CONSTRAINT "get_dividends_request_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."get_dividends_request" IS 'Запрос дивидендов.';
COMMENT ON COLUMN "tin"."get_dividends_request"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."get_dividends_request"."from" IS 'Начало запрашиваемого периода в часовом поясе UTC. Фильтрация происходит по параметру *record_date* (дата фиксации реестра).';
COMMENT ON COLUMN "tin"."get_dividends_request"."to" IS 'Окончание запрашиваемого периода в часовом поясе UTC. Фильтрация происходит по параметру *record_date* (дата фиксации реестра).';

CREATE TABLE IF NOT EXISTS "tin"."get_last_prices_request" (
	CONSTRAINT "get_last_prices_request_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."get_last_prices_request" IS 'Запрос получения цен последних сделок.';

CREATE TABLE IF NOT EXISTS "tin"."get_last_trades_request" (
	"from" timestamptz NULL,
	"to" timestamptz NULL,
	"instrument_id" text NOT NULL,
	CONSTRAINT "get_last_trades_request_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."get_last_trades_request" IS 'Запрос обезличенных сделок за последний час.';
COMMENT ON COLUMN "tin"."get_last_trades_request"."from" IS 'Начало запрашиваемого периода в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."get_last_trades_request"."to" IS 'Окончание запрашиваемого периода в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."get_last_trades_request"."instrument_id" IS 'Идентификатор инструмента, принимает значение figi или instrument_uid.';

CREATE TABLE IF NOT EXISTS "tin"."get_order_book_request" (
	"depth" integer NOT NULL,
	"instrument_id" text NOT NULL,
	CONSTRAINT "get_order_book_request_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."get_order_book_request" IS 'Запрос стакана.';
COMMENT ON COLUMN "tin"."get_order_book_request"."depth" IS 'Глубина стакана.';
COMMENT ON COLUMN "tin"."get_order_book_request"."instrument_id" IS 'Идентификатор инструмента, принимает значение figi или instrument_uid.';

CREATE TABLE IF NOT EXISTS "tin"."get_order_book_response" (
	"figi" text NOT NULL,
	"depth" integer NOT NULL,
	"last_price_units" bigint NULL,
	"last_price_nano" integer NULL,
	"close_price_units" bigint NULL,
	"close_price_nano" integer NULL,
	"limit_up_units" bigint NULL,
	"limit_up_nano" integer NULL,
	"limit_down_units" bigint NULL,
	"limit_down_nano" integer NULL,
	"last_price_ts" timestamptz NULL,
	"close_price_ts" timestamptz NULL,
	"orderbook_ts" timestamptz NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "get_order_book_response_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."get_order_book_response" IS 'Информация о стакане.';
COMMENT ON COLUMN "tin"."get_order_book_response"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."get_order_book_response"."depth" IS 'Глубина стакана.';
COMMENT ON COLUMN "tin"."get_order_book_response"."last_price_units" IS 'Цена последней сделки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."get_order_book_response"."last_price_nano" IS 'Цена последней сделки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."get_order_book_response"."close_price_units" IS 'Цена закрытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."get_order_book_response"."close_price_nano" IS 'Цена закрытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."get_order_book_response"."limit_up_units" IS 'Верхний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."get_order_book_response"."limit_up_nano" IS 'Верхний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."get_order_book_response"."limit_down_units" IS 'Нижний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."get_order_book_response"."limit_down_nano" IS 'Нижний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."get_order_book_response"."last_price_ts" IS 'Время получения цены последней сделки.';
COMMENT ON COLUMN "tin"."get_order_book_response"."close_price_ts" IS 'Время получения цены закрытия.';
COMMENT ON COLUMN "tin"."get_order_book_response"."orderbook_ts" IS 'Время формирования стакана на бирже.';
COMMENT ON COLUMN "tin"."get_order_book_response"."instrument_uid" IS 'Uid инструмента.';

CREATE TABLE IF NOT EXISTS "tin"."get_trading_status_request" (
	"instrument_id" text NOT NULL,
	CONSTRAINT "get_trading_status_request_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."get_trading_status_request" IS 'Запрос получения торгового статуса.';
COMMENT ON COLUMN "tin"."get_trading_status_request"."instrument_id" IS 'Идентификатор инструмента, принимает значение figi или instrument_uid.';

CREATE TABLE IF NOT EXISTS "tin"."info_instrument" (
	"instrument_id" text NOT NULL,
	CONSTRAINT "info_instrument_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."info_instrument" IS 'Запрос подписки на торговый статус.';
COMMENT ON COLUMN "tin"."info_instrument"."instrument_id" IS 'Идентификатор инструмента, принимает значение figi или instrument_uid';

CREATE TABLE IF NOT EXISTS "tin"."instrument_close_price_response" (
	"figi" text NOT NULL,
	"instrument_uid" text NOT NULL,
	"price_units" bigint NULL,
	"price_nano" integer NULL,
	"time" timestamptz NULL,
	CONSTRAINT "instrument_close_price_response_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."instrument_close_price_response" IS 'Цена закрытия торговой сессии по инструменту.';
COMMENT ON COLUMN "tin"."instrument_close_price_response"."figi" IS 'Figi инструмента.';
COMMENT ON COLUMN "tin"."instrument_close_price_response"."instrument_uid" IS 'Uid инструмента.';
COMMENT ON COLUMN "tin"."instrument_close_price_response"."price_units" IS 'Цена закрытия торговой сессии. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument_close_price_response"."price_nano" IS 'Цена закрытия торговой сессии. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument_close_price_response"."time" IS 'Дата совершения торгов.';

CREATE TABLE IF NOT EXISTS "tin"."last_price" (
	"figi" text NOT NULL,
	"price_units" bigint NULL,
	"price_nano" integer NULL,
	"time" timestamptz NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "last_price_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."last_price" IS 'Информация о цене последней сделки.';
COMMENT ON COLUMN "tin"."last_price"."figi" IS 'Figi инструмента.';
COMMENT ON COLUMN "tin"."last_price"."price_units" IS 'Цена последней сделки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."last_price"."price_nano" IS 'Цена последней сделки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."last_price"."time" IS 'Время получения последней цены в часовом поясе UTC по времени биржи.';
COMMENT ON COLUMN "tin"."last_price"."instrument_uid" IS 'Uid инструмента';

CREATE TABLE IF NOT EXISTS "tin"."last_price_instrument" (
	"instrument_id" text NOT NULL,
	CONSTRAINT "last_price_instrument_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."last_price_instrument" IS 'Запрос подписки на последнюю цену.';
COMMENT ON COLUMN "tin"."last_price_instrument"."instrument_id" IS 'Идентификатор инструмента, принимает значение figi или instrument_uid';

CREATE TABLE IF NOT EXISTS "tin"."operation_trade" (
	"trade_id" text NOT NULL,
	"date_time" timestamptz NULL,
	"quantity" bigint NOT NULL,
	"price_currency" text NULL,
	"price_units" bigint NULL,
	"price_nano" integer NULL,
	CONSTRAINT "operation_trade_pk" PRIMARY KEY ("trade_id")
);
COMMENT ON TABLE "tin"."operation_trade" IS 'Сделка по операции.';
COMMENT ON COLUMN "tin"."operation_trade"."trade_id" IS 'Идентификатор сделки.';
COMMENT ON COLUMN "tin"."operation_trade"."date_time" IS 'Дата и время сделки в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."operation_trade"."quantity" IS 'Количество инструментов.';
COMMENT ON COLUMN "tin"."operation_trade"."price_currency" IS 'Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."operation_trade"."price_units" IS 'Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."operation_trade"."price_nano" IS 'Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / дробная часть суммы, может быть отрицательным числом';

CREATE TABLE IF NOT EXISTS "tin"."order_book" (
	"figi" text NOT NULL,
	"depth" integer NOT NULL,
	"is_consistent" bool NOT NULL,
	"time" timestamptz NULL,
	"limit_up_units" bigint NULL,
	"limit_up_nano" integer NULL,
	"limit_down_units" bigint NULL,
	"limit_down_nano" integer NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "order_book_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."order_book" IS 'Пакет стаканов в рамках стрима.';
COMMENT ON COLUMN "tin"."order_book"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."order_book"."depth" IS 'Глубина стакана.';
COMMENT ON COLUMN "tin"."order_book"."is_consistent" IS 'Флаг консистентности стакана. **false** значит не все заявки попали в стакан по причинам сетевых задержек или нарушения порядка доставки.';
COMMENT ON COLUMN "tin"."order_book"."time" IS 'Время формирования стакана в часовом поясе UTC по времени биржи.';
COMMENT ON COLUMN "tin"."order_book"."limit_up_units" IS 'Верхний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_book"."limit_up_nano" IS 'Верхний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_book"."limit_down_units" IS 'Нижний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_book"."limit_down_nano" IS 'Нижний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_book"."instrument_uid" IS 'Uid инструмента';

CREATE TABLE IF NOT EXISTS "tin"."order_book_instrument" (
	"depth" integer NOT NULL,
	"instrument_id" text NOT NULL,
	CONSTRAINT "order_book_instrument_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."order_book_instrument" IS 'Запрос подписки на стаканы.';
COMMENT ON COLUMN "tin"."order_book_instrument"."depth" IS 'Глубина стакана.';
COMMENT ON COLUMN "tin"."order_book_instrument"."instrument_id" IS 'Идентификатор инструмента, принимает значение figi или instrument_uid';

CREATE TABLE IF NOT EXISTS "tin"."order_stage" (
	"price_currency" text NULL,
	"price_units" bigint NULL,
	"price_nano" integer NULL,
	"quantity" bigint NOT NULL,
	"trade_id" text NOT NULL,
	CONSTRAINT "order_stage_pk" PRIMARY KEY ("trade_id")
);
COMMENT ON TABLE "tin"."order_stage" IS 'Сделки в рамках торгового поручения.';
COMMENT ON COLUMN "tin"."order_stage"."price_currency" IS 'Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."order_stage"."price_units" IS 'Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_stage"."price_nano" IS 'Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_stage"."quantity" IS 'Количество лотов.';
COMMENT ON COLUMN "tin"."order_stage"."trade_id" IS 'Идентификатор сделки.';

CREATE TABLE IF NOT EXISTS "tin"."order_trade" (
	"date_time" timestamptz NULL,
	"price_units" bigint NULL,
	"price_nano" integer NULL,
	"quantity" bigint NOT NULL,
	"trade_id" text NOT NULL,
	CONSTRAINT "order_trade_pk" PRIMARY KEY ("trade_id")
);
COMMENT ON TABLE "tin"."order_trade" IS 'Информация о сделке.';
COMMENT ON COLUMN "tin"."order_trade"."date_time" IS 'Дата и время совершения сделки в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."order_trade"."price_units" IS 'Цена за 1 инструмент, по которой совершена сделка. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_trade"."price_nano" IS 'Цена за 1 инструмент, по которой совершена сделка. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_trade"."quantity" IS 'Количество штук в сделке.';
COMMENT ON COLUMN "tin"."order_trade"."trade_id" IS 'Идентификатор сделки.';

CREATE TABLE IF NOT EXISTS "tin"."portfolio_position" (
	"figi" text NOT NULL,
	"instrument_type" text NOT NULL,
	"quantity_units" bigint NULL,
	"quantity_nano" integer NULL,
	"average_position_price_currency" text NULL,
	"average_position_price_units" bigint NULL,
	"average_position_price_nano" integer NULL,
	"expected_yield_units" bigint NULL,
	"expected_yield_nano" integer NULL,
	"current_nkd_currency" text NULL,
	"current_nkd_units" bigint NULL,
	"current_nkd_nano" integer NULL,
	"current_price_currency" text NULL,
	"current_price_units" bigint NULL,
	"current_price_nano" integer NULL,
	"average_position_price_fifo_currency" text NULL,
	"average_position_price_fifo_units" bigint NULL,
	"average_position_price_fifo_nano" integer NULL,
	"blocked" bool NOT NULL,
	"blocked_lots_units" bigint NULL,
	"blocked_lots_nano" integer NULL,
	"position_uid" text NOT NULL,
	"instrument_uid" text NOT NULL,
	"var_margin_currency" text NULL,
	"var_margin_units" bigint NULL,
	"var_margin_nano" integer NULL,
	"expected_yield_fifo_units" bigint NULL,
	"expected_yield_fifo_nano" integer NULL,
	CONSTRAINT "portfolio_position_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."portfolio_position" IS 'Позиции портфеля.';
COMMENT ON COLUMN "tin"."portfolio_position"."figi" IS 'Figi-идентификатора инструмента.';
COMMENT ON COLUMN "tin"."portfolio_position"."instrument_type" IS 'Тип инструмента.';
COMMENT ON COLUMN "tin"."portfolio_position"."quantity_units" IS 'Количество инструмента в портфеле в штуках. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."quantity_nano" IS 'Количество инструмента в портфеле в штуках. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."average_position_price_currency" IS 'Средневзвешенная цена позиции. **Возможна задержка до секунды для пересчёта**. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."portfolio_position"."average_position_price_units" IS 'Средневзвешенная цена позиции. **Возможна задержка до секунды для пересчёта**. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."average_position_price_nano" IS 'Средневзвешенная цена позиции. **Возможна задержка до секунды для пересчёта**. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."expected_yield_units" IS 'Текущая рассчитанная доходность позиции. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."expected_yield_nano" IS 'Текущая рассчитанная доходность позиции. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."current_nkd_currency" IS 'Текущий НКД. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."portfolio_position"."current_nkd_units" IS 'Текущий НКД. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."current_nkd_nano" IS 'Текущий НКД. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."current_price_currency" IS 'Текущая цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."portfolio_position"."current_price_units" IS 'Текущая цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."current_price_nano" IS 'Текущая цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."average_position_price_fifo_currency" IS 'Средняя цена позиции по методу FIFO. **Возможна задержка до секунды для пересчёта**. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."portfolio_position"."average_position_price_fifo_units" IS 'Средняя цена позиции по методу FIFO. **Возможна задержка до секунды для пересчёта**. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."average_position_price_fifo_nano" IS 'Средняя цена позиции по методу FIFO. **Возможна задержка до секунды для пересчёта**. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."blocked" IS 'Заблокировано на бирже.';
COMMENT ON COLUMN "tin"."portfolio_position"."blocked_lots_units" IS 'Количество бумаг, заблокированных выставленными заявками. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."blocked_lots_nano" IS 'Количество бумаг, заблокированных выставленными заявками. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."position_uid" IS 'position_uid-идентификатора инструмента';
COMMENT ON COLUMN "tin"."portfolio_position"."instrument_uid" IS 'instrument_uid-идентификатора инструмента';
COMMENT ON COLUMN "tin"."portfolio_position"."var_margin_currency" IS 'Вариационная маржа / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."portfolio_position"."var_margin_units" IS 'Вариационная маржа / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."var_margin_nano" IS 'Вариационная маржа / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."expected_yield_fifo_units" IS 'Текущая рассчитанная доходность позиции. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."portfolio_position"."expected_yield_fifo_nano" IS 'Текущая рассчитанная доходность позиции. / дробная часть суммы, может быть отрицательным числом';

CREATE TABLE IF NOT EXISTS "tin"."positions_futures" (
	"figi" text NOT NULL,
	"blocked" bigint NOT NULL,
	"balance" bigint NOT NULL,
	"position_uid" text NOT NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "positions_futures_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."positions_futures" IS 'Баланс фьючерса.';
COMMENT ON COLUMN "tin"."positions_futures"."figi" IS 'Figi-идентификатор фьючерса.';
COMMENT ON COLUMN "tin"."positions_futures"."blocked" IS 'Количество бумаг заблокированных выставленными заявками.';
COMMENT ON COLUMN "tin"."positions_futures"."balance" IS 'Текущий незаблокированный баланс.';
COMMENT ON COLUMN "tin"."positions_futures"."position_uid" IS 'Уникальный идентификатор позиции.';
COMMENT ON COLUMN "tin"."positions_futures"."instrument_uid" IS 'Уникальный идентификатор  инструмента.';

CREATE TABLE IF NOT EXISTS "tin"."positions_securities" (
	"figi" text NOT NULL,
	"blocked" bigint NOT NULL,
	"balance" bigint NOT NULL,
	"position_uid" text NOT NULL,
	"instrument_uid" text NOT NULL,
	"exchange_blocked" bool NOT NULL,
	"instrument_type" text NOT NULL,
	CONSTRAINT "positions_securities_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."positions_securities" IS 'Баланс позиции ценной бумаги.';
COMMENT ON COLUMN "tin"."positions_securities"."figi" IS 'Figi-идентификатор бумаги.';
COMMENT ON COLUMN "tin"."positions_securities"."blocked" IS 'Количество бумаг заблокированных выставленными заявками.';
COMMENT ON COLUMN "tin"."positions_securities"."balance" IS 'Текущий незаблокированный баланс.';
COMMENT ON COLUMN "tin"."positions_securities"."position_uid" IS 'Уникальный идентификатор позиции.';
COMMENT ON COLUMN "tin"."positions_securities"."instrument_uid" IS 'Уникальный идентификатор  инструмента.';
COMMENT ON COLUMN "tin"."positions_securities"."exchange_blocked" IS 'Заблокировано на бирже.';
COMMENT ON COLUMN "tin"."positions_securities"."instrument_type" IS 'Тип инструмента.';

CREATE TABLE IF NOT EXISTS "tin"."trade_instrument" (
	"instrument_id" text NOT NULL,
	CONSTRAINT "trade_instrument_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."trade_instrument" IS 'Запрос подписки на поток обезличенных сделок.';
COMMENT ON COLUMN "tin"."trade_instrument"."instrument_id" IS 'Идентификатор инструмента, принимает значение figi или instrument_uid';

CREATE TABLE IF NOT EXISTS "tin"."virtual_portfolio_position" (
	"position_uid" text NOT NULL,
	"instrument_uid" text NOT NULL,
	"figi" text NOT NULL,
	"instrument_type" text NOT NULL,
	"quantity_units" bigint NULL,
	"quantity_nano" integer NULL,
	"average_position_price_currency" text NULL,
	"average_position_price_units" bigint NULL,
	"average_position_price_nano" integer NULL,
	"expected_yield_units" bigint NULL,
	"expected_yield_nano" integer NULL,
	"expected_yield_fifo_units" bigint NULL,
	"expected_yield_fifo_nano" integer NULL,
	"expire_date" timestamptz NULL,
	"current_price_currency" text NULL,
	"current_price_units" bigint NULL,
	"current_price_nano" integer NULL,
	"average_position_price_fifo_currency" text NULL,
	"average_position_price_fifo_units" bigint NULL,
	"average_position_price_fifo_nano" integer NULL,
	CONSTRAINT "virtual_portfolio_position_pk" PRIMARY KEY ("figi")
);
COMMENT ON TABLE "tin"."virtual_portfolio_position" IS '';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."position_uid" IS 'position_uid-идентификатора инструмента';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."instrument_uid" IS 'instrument_uid-идентификатора инструмента';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."figi" IS 'Figi-идентификатора инструмента.';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."instrument_type" IS 'Тип инструмента.';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."quantity_units" IS 'Количество инструмента в портфеле в штуках. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."quantity_nano" IS 'Количество инструмента в портфеле в штуках. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."average_position_price_currency" IS 'Средневзвешенная цена позиции. **Возможна задержка до секунды для пересчёта**. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."average_position_price_units" IS 'Средневзвешенная цена позиции. **Возможна задержка до секунды для пересчёта**. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."average_position_price_nano" IS 'Средневзвешенная цена позиции. **Возможна задержка до секунды для пересчёта**. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."expected_yield_units" IS 'Текущая рассчитанная доходность позиции. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."expected_yield_nano" IS 'Текущая рассчитанная доходность позиции. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."expected_yield_fifo_units" IS 'Текущая рассчитанная доходность позиции. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."expected_yield_fifo_nano" IS 'Текущая рассчитанная доходность позиции. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."expire_date" IS 'Дата до которой нужно продать виртуальные бумаги, после этой даты виртуальная позиция "сгорит"';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."current_price_currency" IS 'Текущая цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."current_price_units" IS 'Текущая цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."current_price_nano" IS 'Текущая цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."average_position_price_fifo_currency" IS 'Средняя цена позиции по методу FIFO. **Возможна задержка до секунды для пересчёта**. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."average_position_price_fifo_units" IS 'Средняя цена позиции по методу FIFO. **Возможна задержка до секунды для пересчёта**. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."virtual_portfolio_position"."average_position_price_fifo_nano" IS 'Средняя цена позиции по методу FIFO. **Возможна задержка до секунды для пересчёта**. / дробная часть суммы, может быть отрицательным числом';

CREATE TABLE IF NOT EXISTS "tin"."asset" (
	"uid" text NOT NULL,
	"type_id" bigint NULL,
	"name" text NOT NULL,
	CONSTRAINT "asset_pk" PRIMARY KEY ("uid"),
	CONSTRAINT "asset_type_fk" FOREIGN KEY ("type") REFERENCES "tin"."asset_type" ("id")
);
CREATE INDEX IF NOT EXISTS "asset_type_idx" ON "tin"."asset" USING btree ("type");
COMMENT ON TABLE "tin"."asset" IS 'Информация об активе.';
COMMENT ON COLUMN "tin"."asset"."uid" IS 'Уникальный идентификатор актива.';
COMMENT ON COLUMN "tin"."asset"."type_id" IS 'Тип актива.';
COMMENT ON COLUMN "tin"."asset"."name" IS 'Наименование актива.';

CREATE TABLE IF NOT EXISTS "tin"."asset_instrument" (
	"uid" text NOT NULL,
	"figi" text NOT NULL,
	"instrument_type" text NOT NULL,
	"ticker" text NOT NULL,
	"class_code" text NOT NULL,
	"instrument_kind_id" bigint NULL,
	"position_uid" text NOT NULL,
	CONSTRAINT "asset_instrument_pk" PRIMARY KEY ("uid"),
	CONSTRAINT "asset_instrument_instrument_kind_fk" FOREIGN KEY ("instrument_kind") REFERENCES "tin"."instrument_type" ("id")
);
CREATE INDEX IF NOT EXISTS "asset_instrument_instrument_kind_idx" ON "tin"."asset_instrument" USING btree ("instrument_kind");
COMMENT ON TABLE "tin"."asset_instrument" IS 'Идентификаторы инструмента.';
COMMENT ON COLUMN "tin"."asset_instrument"."uid" IS 'uid идентификатор инструмента.';
COMMENT ON COLUMN "tin"."asset_instrument"."figi" IS 'figi идентификатор инструмента.';
COMMENT ON COLUMN "tin"."asset_instrument"."instrument_type" IS 'Тип инструмента.';
COMMENT ON COLUMN "tin"."asset_instrument"."ticker" IS 'Тикер инструмента.';
COMMENT ON COLUMN "tin"."asset_instrument"."class_code" IS 'Класс-код (секция торгов).';
COMMENT ON COLUMN "tin"."asset_instrument"."instrument_kind_id" IS 'Тип инструмента.';
COMMENT ON COLUMN "tin"."asset_instrument"."position_uid" IS 'id позиции.';

CREATE TABLE IF NOT EXISTS "tin"."asset_share" (
	"type_id" bigint NULL,
	"issue_size_units" bigint NULL,
	"issue_size_nano" integer NULL,
	"nominal_units" bigint NULL,
	"nominal_nano" integer NULL,
	"nominal_currency" text NOT NULL,
	"primary_index" text NOT NULL,
	"dividend_rate_units" bigint NULL,
	"dividend_rate_nano" integer NULL,
	"preferred_share_type" text NOT NULL,
	"ipo_date" timestamptz NULL,
	"registry_date" timestamptz NULL,
	"div_yield_flag" bool NOT NULL,
	"issue_kind" text NOT NULL,
	"placement_date" timestamptz NULL,
	"repres_isin" text NOT NULL,
	"issue_size_plan_units" bigint NULL,
	"issue_size_plan_nano" integer NULL,
	"total_float_units" bigint NULL,
	"total_float_nano" integer NULL,
	CONSTRAINT "asset_share_pk" PRIMARY KEY ("primary_index"),
	CONSTRAINT "asset_share_type_fk" FOREIGN KEY ("type") REFERENCES "tin"."share_type" ("id")
);
CREATE INDEX IF NOT EXISTS "asset_share_type_idx" ON "tin"."asset_share" USING btree ("type");
COMMENT ON TABLE "tin"."asset_share" IS 'Акция.';
COMMENT ON COLUMN "tin"."asset_share"."type_id" IS 'Тип акции.';
COMMENT ON COLUMN "tin"."asset_share"."issue_size_units" IS 'Объем выпуска (шт.). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_share"."issue_size_nano" IS 'Объем выпуска (шт.). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_share"."nominal_units" IS 'Номинал. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_share"."nominal_nano" IS 'Номинал. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_share"."nominal_currency" IS 'Валюта номинала.';
COMMENT ON COLUMN "tin"."asset_share"."primary_index" IS 'Индекс (Bloomberg).';
COMMENT ON COLUMN "tin"."asset_share"."dividend_rate_units" IS 'Ставка дивиденда (для привилегированных акций). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_share"."dividend_rate_nano" IS 'Ставка дивиденда (для привилегированных акций). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_share"."preferred_share_type" IS 'Тип привилегированных акций.';
COMMENT ON COLUMN "tin"."asset_share"."ipo_date" IS 'Дата IPO.';
COMMENT ON COLUMN "tin"."asset_share"."registry_date" IS 'Дата регистрации.';
COMMENT ON COLUMN "tin"."asset_share"."div_yield_flag" IS 'Признак наличия дивидендной доходности.';
COMMENT ON COLUMN "tin"."asset_share"."issue_kind" IS 'Форма выпуска ФИ.';
COMMENT ON COLUMN "tin"."asset_share"."placement_date" IS 'Дата размещения акции.';
COMMENT ON COLUMN "tin"."asset_share"."repres_isin" IS 'ISIN базового актива.';
COMMENT ON COLUMN "tin"."asset_share"."issue_size_plan_units" IS 'Объявленное количество шт. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_share"."issue_size_plan_nano" IS 'Объявленное количество шт. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_share"."total_float_units" IS 'Количество акций в свободном обращении. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."asset_share"."total_float_nano" IS 'Количество акций в свободном обращении. / дробная часть суммы, может быть отрицательным числом';

CREATE TABLE IF NOT EXISTS "tin"."candle" (
	"figi" text NOT NULL,
	"interval_id" bigint NULL,
	"open_units" bigint NULL,
	"open_nano" integer NULL,
	"high_units" bigint NULL,
	"high_nano" integer NULL,
	"low_units" bigint NULL,
	"low_nano" integer NULL,
	"close_units" bigint NULL,
	"close_nano" integer NULL,
	"volume" bigint NOT NULL,
	"time" timestamptz NULL,
	"last_trade_ts" timestamptz NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "candle_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "candle_interval_fk" FOREIGN KEY ("interval") REFERENCES "tin"."subscription_interval" ("id")
);
CREATE INDEX IF NOT EXISTS "candle_interval_idx" ON "tin"."candle" USING btree ("interval");
COMMENT ON TABLE "tin"."candle" IS 'Пакет свечей в рамках стрима.';
COMMENT ON COLUMN "tin"."candle"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."candle"."interval_id" IS 'Интервал свечи.';
COMMENT ON COLUMN "tin"."candle"."open_units" IS 'Цена открытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."candle"."open_nano" IS 'Цена открытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."candle"."high_units" IS 'Максимальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."candle"."high_nano" IS 'Максимальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."candle"."low_units" IS 'Минимальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."candle"."low_nano" IS 'Минимальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."candle"."close_units" IS 'Цена закрытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."candle"."close_nano" IS 'Цена закрытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."candle"."volume" IS 'Объём сделок в лотах.';
COMMENT ON COLUMN "tin"."candle"."time" IS 'Время начала интервала свечи в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."candle"."last_trade_ts" IS 'Время последней сделки, вошедшей в свечу в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."candle"."instrument_uid" IS 'Uid инструмента';

CREATE TABLE IF NOT EXISTS "tin"."candle_instrument" (
	"interval_id" bigint NULL,
	"instrument_id" text NOT NULL,
	CONSTRAINT "candle_instrument_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "candle_instrument_interval_fk" FOREIGN KEY ("interval") REFERENCES "tin"."subscription_interval" ("id")
);
CREATE INDEX IF NOT EXISTS "candle_instrument_interval_idx" ON "tin"."candle_instrument" USING btree ("interval");
COMMENT ON TABLE "tin"."candle_instrument" IS 'Запрос изменения статус подписки на свечи.';
COMMENT ON COLUMN "tin"."candle_instrument"."interval_id" IS 'Интервал свечей.';
COMMENT ON COLUMN "tin"."candle_instrument"."instrument_id" IS 'Идентификатор инструмента, принимает значение figi или instrument_uid';

CREATE TABLE IF NOT EXISTS "tin"."coupon" (
	"figi" text NOT NULL,
	"coupon_date" timestamptz NULL,
	"coupon_number" bigint NOT NULL,
	"fix_date" timestamptz NULL,
	"pay_one_bond_currency" text NULL,
	"pay_one_bond_units" bigint NULL,
	"pay_one_bond_nano" integer NULL,
	"coupon_type_id" bigint NULL,
	"coupon_start_date" timestamptz NULL,
	"coupon_end_date" timestamptz NULL,
	"coupon_period" integer NOT NULL,
	CONSTRAINT "coupon_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "coupon_coupon_type_fk" FOREIGN KEY ("coupon_type") REFERENCES "tin"."coupon_type" ("id")
);
CREATE INDEX IF NOT EXISTS "coupon_coupon_type_idx" ON "tin"."coupon" USING btree ("coupon_type");
COMMENT ON TABLE "tin"."coupon" IS 'Объект передачи информации о купоне облигации.';
COMMENT ON COLUMN "tin"."coupon"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."coupon"."coupon_date" IS 'Дата выплаты купона.';
COMMENT ON COLUMN "tin"."coupon"."coupon_number" IS 'Номер купона.';
COMMENT ON COLUMN "tin"."coupon"."fix_date" IS '(Опционально) Дата фиксации реестра для выплаты купона.';
COMMENT ON COLUMN "tin"."coupon"."pay_one_bond_currency" IS 'Выплата на одну облигацию. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."coupon"."pay_one_bond_units" IS 'Выплата на одну облигацию. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."coupon"."pay_one_bond_nano" IS 'Выплата на одну облигацию. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."coupon"."coupon_type_id" IS 'Тип купона.';
COMMENT ON COLUMN "tin"."coupon"."coupon_start_date" IS 'Начало купонного периода.';
COMMENT ON COLUMN "tin"."coupon"."coupon_end_date" IS 'Окончание купонного периода.';
COMMENT ON COLUMN "tin"."coupon"."coupon_period" IS 'Купонный период в днях.';

CREATE TABLE IF NOT EXISTS "tin"."favorite_instrument" (
	"figi" text NOT NULL,
	"ticker" text NOT NULL,
	"class_code" text NOT NULL,
	"isin" text NOT NULL,
	"instrument_type" text NOT NULL,
	"otc_flag" bool NOT NULL,
	"api_trade_available_flag" bool NOT NULL,
	"instrument_kind_id" bigint NULL,
	CONSTRAINT "favorite_instrument_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "favorite_instrument_instrument_kind_fk" FOREIGN KEY ("instrument_kind") REFERENCES "tin"."instrument_type" ("id")
);
CREATE INDEX IF NOT EXISTS "favorite_instrument_instrument_kind_idx" ON "tin"."favorite_instrument" USING btree ("instrument_kind");
COMMENT ON TABLE "tin"."favorite_instrument" IS 'Массив избранных инструментов.';
COMMENT ON COLUMN "tin"."favorite_instrument"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."favorite_instrument"."ticker" IS 'Тикер инструмента.';
COMMENT ON COLUMN "tin"."favorite_instrument"."class_code" IS 'Класс-код инструмента.';
COMMENT ON COLUMN "tin"."favorite_instrument"."isin" IS 'Isin-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."favorite_instrument"."instrument_type" IS 'Тип инструмента.';
COMMENT ON COLUMN "tin"."favorite_instrument"."otc_flag" IS 'Признак внебиржевой ценной бумаги.';
COMMENT ON COLUMN "tin"."favorite_instrument"."api_trade_available_flag" IS 'Параметр указывает на возможность торговать инструментом через API.';
COMMENT ON COLUMN "tin"."favorite_instrument"."instrument_kind_id" IS 'Тип инструмента.';

CREATE TABLE IF NOT EXISTS "tin"."get_candles_request" (
	"from" timestamptz NULL,
	"to" timestamptz NULL,
	"interval_id" bigint NULL,
	"instrument_id" text NOT NULL,
	CONSTRAINT "get_candles_request_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "get_candles_request_interval_fk" FOREIGN KEY ("interval") REFERENCES "tin"."candle_interval" ("id")
);
CREATE INDEX IF NOT EXISTS "get_candles_request_interval_idx" ON "tin"."get_candles_request" USING btree ("interval");
COMMENT ON TABLE "tin"."get_candles_request" IS 'Запрос исторических свечей.';
COMMENT ON COLUMN "tin"."get_candles_request"."from" IS 'Начало запрашиваемого периода в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."get_candles_request"."to" IS 'Окончание запрашиваемого периода в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."get_candles_request"."interval_id" IS 'Интервал запрошенных свечей.';
COMMENT ON COLUMN "tin"."get_candles_request"."instrument_id" IS 'Идентификатор инструмента, принимает значение figi или instrument_uid.';

CREATE TABLE IF NOT EXISTS "tin"."get_trading_status_response" (
	"figi" text NOT NULL,
	"trading_status_id" bigint NULL,
	"limit_order_available_flag" bool NOT NULL,
	"market_order_available_flag" bool NOT NULL,
	"api_trade_available_flag" bool NOT NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "get_trading_status_response_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "get_trading_status_response_trading_status_fk" FOREIGN KEY ("trading_status") REFERENCES "tin"."security_trading_status" ("id")
);
CREATE INDEX IF NOT EXISTS "get_trading_status_response_trading_status_idx" ON "tin"."get_trading_status_response" USING btree ("trading_status");
COMMENT ON TABLE "tin"."get_trading_status_response" IS 'Информация о торговом статусе.';
COMMENT ON COLUMN "tin"."get_trading_status_response"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."get_trading_status_response"."trading_status_id" IS 'Статус торговли инструментом.';
COMMENT ON COLUMN "tin"."get_trading_status_response"."limit_order_available_flag" IS 'Признак доступности выставления лимитной заявки по инструменту.';
COMMENT ON COLUMN "tin"."get_trading_status_response"."market_order_available_flag" IS 'Признак доступности выставления рыночной заявки по инструменту.';
COMMENT ON COLUMN "tin"."get_trading_status_response"."api_trade_available_flag" IS 'Признак доступности торгов через API.';
COMMENT ON COLUMN "tin"."get_trading_status_response"."instrument_uid" IS 'Uid инструмента.';

CREATE TABLE IF NOT EXISTS "tin"."info_subscription" (
	"figi" text NOT NULL,
	"subscription_status_id" bigint NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "info_subscription_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "info_subscription_subscription_status_fk" FOREIGN KEY ("subscription_status") REFERENCES "tin"."subscription_status" ("id")
);
CREATE INDEX IF NOT EXISTS "info_subscription_subscription_status_idx" ON "tin"."info_subscription" USING btree ("subscription_status");
COMMENT ON TABLE "tin"."info_subscription" IS 'Статус подписки.';
COMMENT ON COLUMN "tin"."info_subscription"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."info_subscription"."subscription_status_id" IS 'Статус подписки.';
COMMENT ON COLUMN "tin"."info_subscription"."instrument_uid" IS 'Uid инструмента';

CREATE TABLE IF NOT EXISTS "tin"."instrument_request" (
	"id_type_id" bigint NULL,
	"class_code" text NOT NULL,
	"id" text NOT NULL,
	CONSTRAINT "instrument_request_pk" PRIMARY KEY ("id"),
	CONSTRAINT "instrument_request_id_type_fk" FOREIGN KEY ("id_type") REFERENCES "tin"."instrument_id_type" ("id")
);
CREATE INDEX IF NOT EXISTS "instrument_request_id_type_idx" ON "tin"."instrument_request" USING btree ("id_type");
COMMENT ON TABLE "tin"."instrument_request" IS 'Запрос получения инструмента по идентификатору.';
COMMENT ON COLUMN "tin"."instrument_request"."id_type_id" IS 'Тип идентификатора инструмента. Возможные значения: figi, ticker. Подробнее об идентификации инструментов: [Идентификация инструментов](https://tinkoff.github.io/investAPI/faq_identification/)';
COMMENT ON COLUMN "tin"."instrument_request"."class_code" IS 'Идентификатор class_code. Обязателен при id_type = ticker.';
COMMENT ON COLUMN "tin"."instrument_request"."id" IS 'Идентификатор запрашиваемого инструмента.';

CREATE TABLE IF NOT EXISTS "tin"."instrument_short" (
	"isin" text NOT NULL,
	"figi" text NOT NULL,
	"ticker" text NOT NULL,
	"class_code" text NOT NULL,
	"instrument_type" text NOT NULL,
	"name" text NOT NULL,
	"uid" text NOT NULL,
	"position_uid" text NOT NULL,
	"instrument_kind_id" bigint NULL,
	"api_trade_available_flag" bool NOT NULL,
	"for_iis_flag" bool NOT NULL,
	"first_1min_candle_date" timestamptz NULL,
	"first_1day_candle_date" timestamptz NULL,
	"for_qual_investor_flag" bool NOT NULL,
	"weekend_flag" bool NOT NULL,
	"blocked_tca_flag" bool NOT NULL,
	CONSTRAINT "instrument_short_pk" PRIMARY KEY ("uid"),
	CONSTRAINT "instrument_short_instrument_kind_fk" FOREIGN KEY ("instrument_kind") REFERENCES "tin"."instrument_type" ("id")
);
CREATE INDEX IF NOT EXISTS "instrument_short_instrument_kind_idx" ON "tin"."instrument_short" USING btree ("instrument_kind");
COMMENT ON TABLE "tin"."instrument_short" IS 'Краткая информация об инструменте.';
COMMENT ON COLUMN "tin"."instrument_short"."isin" IS 'Isin инструмента.';
COMMENT ON COLUMN "tin"."instrument_short"."figi" IS 'Figi инструмента.';
COMMENT ON COLUMN "tin"."instrument_short"."ticker" IS 'Ticker инструмента.';
COMMENT ON COLUMN "tin"."instrument_short"."class_code" IS 'ClassCode инструмента.';
COMMENT ON COLUMN "tin"."instrument_short"."instrument_type" IS 'Тип инструмента.';
COMMENT ON COLUMN "tin"."instrument_short"."name" IS 'Название инструмента.';
COMMENT ON COLUMN "tin"."instrument_short"."uid" IS 'Уникальный идентификатор инструмента.';
COMMENT ON COLUMN "tin"."instrument_short"."position_uid" IS 'Уникальный идентификатор позиции инструмента.';
COMMENT ON COLUMN "tin"."instrument_short"."instrument_kind_id" IS 'Тип инструмента.';
COMMENT ON COLUMN "tin"."instrument_short"."api_trade_available_flag" IS 'Параметр указывает на возможность торговать инструментом через API.';
COMMENT ON COLUMN "tin"."instrument_short"."for_iis_flag" IS 'Признак доступности для ИИС.';
COMMENT ON COLUMN "tin"."instrument_short"."first_1min_candle_date" IS 'Дата первой минутной свечи.';
COMMENT ON COLUMN "tin"."instrument_short"."first_1day_candle_date" IS 'Дата первой дневной свечи.';
COMMENT ON COLUMN "tin"."instrument_short"."for_qual_investor_flag" IS 'Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов.';
COMMENT ON COLUMN "tin"."instrument_short"."weekend_flag" IS 'Флаг отображающий доступность торговли инструментом по выходным';
COMMENT ON COLUMN "tin"."instrument_short"."blocked_tca_flag" IS 'Флаг заблокированного ТКС';

CREATE TABLE IF NOT EXISTS "tin"."last_price_subscription" (
	"figi" text NOT NULL,
	"subscription_status_id" bigint NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "last_price_subscription_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "last_price_subscription_subscription_status_fk" FOREIGN KEY ("subscription_status") REFERENCES "tin"."subscription_status" ("id")
);
CREATE INDEX IF NOT EXISTS "last_price_subscription_subscription_status_idx" ON "tin"."last_price_subscription" USING btree ("subscription_status");
COMMENT ON TABLE "tin"."last_price_subscription" IS 'Статус подписки на цену последней сделки.';
COMMENT ON COLUMN "tin"."last_price_subscription"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."last_price_subscription"."subscription_status_id" IS 'Статус подписки.';
COMMENT ON COLUMN "tin"."last_price_subscription"."instrument_uid" IS 'Uid инструмента';

CREATE TABLE IF NOT EXISTS "tin"."operations_request" (
	"account_id" text NOT NULL,
	"from" timestamptz NULL,
	"to" timestamptz NULL,
	"state_id" bigint NULL,
	"figi" text NOT NULL,
	CONSTRAINT "operations_request_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "operations_request_state_fk" FOREIGN KEY ("state") REFERENCES "tin"."operation_state" ("id")
);
CREATE INDEX IF NOT EXISTS "operations_request_state_idx" ON "tin"."operations_request" USING btree ("state");
COMMENT ON TABLE "tin"."operations_request" IS 'Запрос получения списка операций по счёту.';
COMMENT ON COLUMN "tin"."operations_request"."account_id" IS 'Идентификатор счёта клиента.';
COMMENT ON COLUMN "tin"."operations_request"."from" IS 'Начало периода (по UTC).';
COMMENT ON COLUMN "tin"."operations_request"."to" IS 'Окончание периода (по UTC).';
COMMENT ON COLUMN "tin"."operations_request"."state_id" IS 'Статус запрашиваемых операций.';
COMMENT ON COLUMN "tin"."operations_request"."figi" IS 'Figi-идентификатор инструмента для фильтрации.';

CREATE TABLE IF NOT EXISTS "tin"."order_book_subscription" (
	"figi" text NOT NULL,
	"depth" integer NOT NULL,
	"subscription_status_id" bigint NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "order_book_subscription_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "order_book_subscription_subscription_status_fk" FOREIGN KEY ("subscription_status") REFERENCES "tin"."subscription_status" ("id")
);
CREATE INDEX IF NOT EXISTS "order_book_subscription_subscription_status_idx" ON "tin"."order_book_subscription" USING btree ("subscription_status");
COMMENT ON TABLE "tin"."order_book_subscription" IS 'Статус подписки.';
COMMENT ON COLUMN "tin"."order_book_subscription"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."order_book_subscription"."depth" IS 'Глубина стакана.';
COMMENT ON COLUMN "tin"."order_book_subscription"."subscription_status_id" IS 'Статус подписки.';
COMMENT ON COLUMN "tin"."order_book_subscription"."instrument_uid" IS 'Uid инструмента';

CREATE TABLE IF NOT EXISTS "tin"."order_trades" (
	"order_id" text NOT NULL,
	"created_at" timestamptz NULL,
	"direction_id" bigint NULL,
	"figi" text NOT NULL,
	"account_id" text NOT NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "order_trades_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "order_trades_direction_fk" FOREIGN KEY ("direction") REFERENCES "tin"."order_direction" ("id")
);
CREATE INDEX IF NOT EXISTS "order_trades_direction_idx" ON "tin"."order_trades" USING btree ("direction");
COMMENT ON TABLE "tin"."order_trades" IS 'Информация об исполнении торгового поручения.';
COMMENT ON COLUMN "tin"."order_trades"."order_id" IS 'Идентификатор торгового поручения.';
COMMENT ON COLUMN "tin"."order_trades"."created_at" IS 'Дата и время создания сообщения в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."order_trades"."direction_id" IS 'Направление сделки.';
COMMENT ON COLUMN "tin"."order_trades"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."order_trades"."account_id" IS 'Идентификатор счёта.';
COMMENT ON COLUMN "tin"."order_trades"."instrument_uid" IS 'UID идентификатор инструмента.';

CREATE TABLE IF NOT EXISTS "tin"."trade" (
	"figi" text NOT NULL,
	"direction_id" bigint NULL,
	"price_units" bigint NULL,
	"price_nano" integer NULL,
	"quantity" bigint NOT NULL,
	"time" timestamptz NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "trade_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "trade_direction_fk" FOREIGN KEY ("direction") REFERENCES "tin"."trade_direction" ("id")
);
CREATE INDEX IF NOT EXISTS "trade_direction_idx" ON "tin"."trade" USING btree ("direction");
COMMENT ON TABLE "tin"."trade" IS 'Информация о сделке.';
COMMENT ON COLUMN "tin"."trade"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."trade"."direction_id" IS 'Направление сделки.';
COMMENT ON COLUMN "tin"."trade"."price_units" IS 'Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."trade"."price_nano" IS 'Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://tinkoff.github.io/investAPI/faq_marketdata/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."trade"."quantity" IS 'Количество лотов.';
COMMENT ON COLUMN "tin"."trade"."time" IS 'Время сделки в часовом поясе UTC по времени биржи.';
COMMENT ON COLUMN "tin"."trade"."instrument_uid" IS 'Uid инструмента';

CREATE TABLE IF NOT EXISTS "tin"."trade_subscription" (
	"figi" text NOT NULL,
	"subscription_status_id" bigint NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "trade_subscription_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "trade_subscription_subscription_status_fk" FOREIGN KEY ("subscription_status") REFERENCES "tin"."subscription_status" ("id")
);
CREATE INDEX IF NOT EXISTS "trade_subscription_subscription_status_idx" ON "tin"."trade_subscription" USING btree ("subscription_status");
COMMENT ON TABLE "tin"."trade_subscription" IS 'Статус подписки.';
COMMENT ON COLUMN "tin"."trade_subscription"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."trade_subscription"."subscription_status_id" IS 'Статус подписки.';
COMMENT ON COLUMN "tin"."trade_subscription"."instrument_uid" IS 'Uid инструмента';

CREATE TABLE IF NOT EXISTS "tin"."trading_status" (
	"figi" text NOT NULL,
	"trading_status_id" bigint NULL,
	"time" timestamptz NULL,
	"limit_order_available_flag" bool NOT NULL,
	"market_order_available_flag" bool NOT NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "trading_status_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "trading_status_trading_status_fk" FOREIGN KEY ("trading_status") REFERENCES "tin"."security_trading_status" ("id")
);
CREATE INDEX IF NOT EXISTS "trading_status_trading_status_idx" ON "tin"."trading_status" USING btree ("trading_status");
COMMENT ON TABLE "tin"."trading_status" IS 'Пакет изменения торгового статуса.';
COMMENT ON COLUMN "tin"."trading_status"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."trading_status"."trading_status_id" IS 'Статус торговли инструментом.';
COMMENT ON COLUMN "tin"."trading_status"."time" IS 'Время изменения торгового статуса в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."trading_status"."limit_order_available_flag" IS 'Признак доступности выставления лимитной заявки по инструменту.';
COMMENT ON COLUMN "tin"."trading_status"."market_order_available_flag" IS 'Признак доступности выставления рыночной заявки по инструменту.';
COMMENT ON COLUMN "tin"."trading_status"."instrument_uid" IS 'Uid инструмента';

CREATE TABLE IF NOT EXISTS "tin"."asset_full" (
	"uid" text NOT NULL,
	"type_id" bigint NULL,
	"name" text NOT NULL,
	"name_brief" text NOT NULL,
	"description" text NOT NULL,
	"deleted_at" timestamptz NULL,
	"gos_reg_code" text NOT NULL,
	"cfi" text NOT NULL,
	"code_nsd" text NOT NULL,
	"status" text NOT NULL,
	"brand_id" text NULL,
	"updated_at" timestamptz NULL,
	"br_code" text NOT NULL,
	"br_code_name" text NOT NULL,
	CONSTRAINT "asset_full_pk" PRIMARY KEY ("uid"),
	CONSTRAINT "asset_full_type_fk" FOREIGN KEY ("type") REFERENCES "tin"."asset_type" ("id"),
	CONSTRAINT "asset_full_brand_fk" FOREIGN KEY ("brand") REFERENCES "tin"."brand" ("uid")
);
CREATE INDEX IF NOT EXISTS "asset_full_type_idx" ON "tin"."asset_full" USING btree ("type");
CREATE INDEX IF NOT EXISTS "asset_full_brand_idx" ON "tin"."asset_full" USING btree ("brand");
COMMENT ON TABLE "tin"."asset_full" IS '';
COMMENT ON COLUMN "tin"."asset_full"."uid" IS 'Уникальный идентификатор актива.';
COMMENT ON COLUMN "tin"."asset_full"."type_id" IS 'Тип актива.';
COMMENT ON COLUMN "tin"."asset_full"."name" IS 'Наименование актива.';
COMMENT ON COLUMN "tin"."asset_full"."name_brief" IS 'Короткое наименование актива.';
COMMENT ON COLUMN "tin"."asset_full"."description" IS 'Описание актива.';
COMMENT ON COLUMN "tin"."asset_full"."deleted_at" IS 'Дата и время удаления актива.';
COMMENT ON COLUMN "tin"."asset_full"."gos_reg_code" IS 'Номер государственной регистрации.';
COMMENT ON COLUMN "tin"."asset_full"."cfi" IS 'Код CFI.';
COMMENT ON COLUMN "tin"."asset_full"."code_nsd" IS 'Код НРД инструмента.';
COMMENT ON COLUMN "tin"."asset_full"."status" IS 'Статус актива.';
COMMENT ON COLUMN "tin"."asset_full"."brand_id" IS 'Бренд.';
COMMENT ON COLUMN "tin"."asset_full"."updated_at" IS 'Дата и время последнего обновления записи.';
COMMENT ON COLUMN "tin"."asset_full"."br_code" IS 'Код типа ц.б. по классификации Банка России.';
COMMENT ON COLUMN "tin"."asset_full"."br_code_name" IS 'Наименование кода типа ц.б. по классификации Банка России.';

CREATE TABLE IF NOT EXISTS "tin"."candle_subscription" (
	"figi" text NOT NULL,
	"interval_id" bigint NULL,
	"subscription_status_id" bigint NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "candle_subscription_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "candle_subscription_interval_fk" FOREIGN KEY ("interval") REFERENCES "tin"."subscription_interval" ("id"),
	CONSTRAINT "candle_subscription_subscription_status_fk" FOREIGN KEY ("subscription_status") REFERENCES "tin"."subscription_status" ("id")
);
CREATE INDEX IF NOT EXISTS "candle_subscription_interval_idx" ON "tin"."candle_subscription" USING btree ("interval");
CREATE INDEX IF NOT EXISTS "candle_subscription_subscription_status_idx" ON "tin"."candle_subscription" USING btree ("subscription_status");
COMMENT ON TABLE "tin"."candle_subscription" IS 'Статус подписки на свечи.';
COMMENT ON COLUMN "tin"."candle_subscription"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."candle_subscription"."interval_id" IS 'Интервал свечей.';
COMMENT ON COLUMN "tin"."candle_subscription"."subscription_status_id" IS 'Статус подписки.';
COMMENT ON COLUMN "tin"."candle_subscription"."instrument_uid" IS 'Uid инструмента';

CREATE TABLE IF NOT EXISTS "tin"."currency" (
	"figi" text NOT NULL,
	"ticker" text NOT NULL,
	"class_code" text NOT NULL,
	"isin" text NOT NULL,
	"lot" integer NOT NULL,
	"currency" text NOT NULL,
	"klong_units" bigint NULL,
	"klong_nano" integer NULL,
	"kshort_units" bigint NULL,
	"kshort_nano" integer NULL,
	"dlong_units" bigint NULL,
	"dlong_nano" integer NULL,
	"dshort_units" bigint NULL,
	"dshort_nano" integer NULL,
	"dlong_min_units" bigint NULL,
	"dlong_min_nano" integer NULL,
	"dshort_min_units" bigint NULL,
	"dshort_min_nano" integer NULL,
	"short_enabled_flag" bool NOT NULL,
	"name" text NOT NULL,
	"exchange" text NOT NULL,
	"nominal_currency" text NULL,
	"nominal_units" bigint NULL,
	"nominal_nano" integer NULL,
	"country_of_risk" text NOT NULL,
	"country_of_risk_name" text NOT NULL,
	"trading_status_id" bigint NULL,
	"otc_flag" bool NOT NULL,
	"buy_available_flag" bool NOT NULL,
	"sell_available_flag" bool NOT NULL,
	"iso_currency_name" text NOT NULL,
	"min_price_increment_units" bigint NULL,
	"min_price_increment_nano" integer NULL,
	"api_trade_available_flag" bool NOT NULL,
	"uid" text NOT NULL,
	"real_exchange_id" bigint NULL,
	"position_uid" text NOT NULL,
	"for_iis_flag" bool NOT NULL,
	"for_qual_investor_flag" bool NOT NULL,
	"weekend_flag" bool NOT NULL,
	"blocked_tca_flag" bool NOT NULL,
	"first_1min_candle_date" timestamptz NULL,
	"first_1day_candle_date" timestamptz NULL,
	CONSTRAINT "currency_pk" PRIMARY KEY ("uid"),
	CONSTRAINT "currency_trading_status_fk" FOREIGN KEY ("trading_status") REFERENCES "tin"."security_trading_status" ("id"),
	CONSTRAINT "currency_real_exchange_fk" FOREIGN KEY ("real_exchange") REFERENCES "tin"."real_exchange" ("id")
);
CREATE INDEX IF NOT EXISTS "currency_trading_status_idx" ON "tin"."currency" USING btree ("trading_status");
CREATE INDEX IF NOT EXISTS "currency_real_exchange_idx" ON "tin"."currency" USING btree ("real_exchange");
COMMENT ON TABLE "tin"."currency" IS 'Объект передачи информации о валюте.';
COMMENT ON COLUMN "tin"."currency"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."currency"."ticker" IS 'Тикер инструмента.';
COMMENT ON COLUMN "tin"."currency"."class_code" IS 'Класс-код (секция торгов).';
COMMENT ON COLUMN "tin"."currency"."isin" IS 'Isin-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."currency"."lot" IS 'Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру *lot*. Подробнее: [лот](https://tinkoff.github.io/investAPI/glossary#lot)';
COMMENT ON COLUMN "tin"."currency"."currency" IS 'Валюта расчётов.';
COMMENT ON COLUMN "tin"."currency"."klong_units" IS 'Коэффициент ставки риска длинной позиции по инструменту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."klong_nano" IS 'Коэффициент ставки риска длинной позиции по инструменту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."kshort_units" IS 'Коэффициент ставки риска короткой позиции по инструменту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."kshort_nano" IS 'Коэффициент ставки риска короткой позиции по инструменту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."dlong_units" IS 'Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."dlong_nano" IS 'Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."dshort_units" IS 'Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."dshort_nano" IS 'Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."dlong_min_units" IS 'Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."dlong_min_nano" IS 'Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."dshort_min_units" IS 'Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."dshort_min_nano" IS 'Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."short_enabled_flag" IS 'Признак доступности для операций в шорт.';
COMMENT ON COLUMN "tin"."currency"."name" IS 'Название инструмента.';
COMMENT ON COLUMN "tin"."currency"."exchange" IS 'Торговая площадка.';
COMMENT ON COLUMN "tin"."currency"."nominal_currency" IS 'Номинал. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."currency"."nominal_units" IS 'Номинал. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."nominal_nano" IS 'Номинал. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."country_of_risk" IS 'Код страны риска, т.е. страны, в которой компания ведёт основной бизнес.';
COMMENT ON COLUMN "tin"."currency"."country_of_risk_name" IS 'Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес.';
COMMENT ON COLUMN "tin"."currency"."trading_status_id" IS 'Текущий режим торгов инструмента.';
COMMENT ON COLUMN "tin"."currency"."otc_flag" IS 'Признак внебиржевой ценной бумаги.';
COMMENT ON COLUMN "tin"."currency"."buy_available_flag" IS 'Признак доступности для покупки.';
COMMENT ON COLUMN "tin"."currency"."sell_available_flag" IS 'Признак доступности для продажи.';
COMMENT ON COLUMN "tin"."currency"."iso_currency_name" IS 'Строковый ISO-код валюты.';
COMMENT ON COLUMN "tin"."currency"."min_price_increment_units" IS 'Шаг цены. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."min_price_increment_nano" IS 'Шаг цены. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."currency"."api_trade_available_flag" IS 'Параметр указывает на возможность торговать инструментом через API.';
COMMENT ON COLUMN "tin"."currency"."uid" IS 'Уникальный идентификатор инструмента.';
COMMENT ON COLUMN "tin"."currency"."real_exchange_id" IS 'Реальная площадка исполнения расчётов.';
COMMENT ON COLUMN "tin"."currency"."position_uid" IS 'Уникальный идентификатор позиции инструмента.';
COMMENT ON COLUMN "tin"."currency"."for_iis_flag" IS 'Признак доступности для ИИС.';
COMMENT ON COLUMN "tin"."currency"."for_qual_investor_flag" IS 'Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов.';
COMMENT ON COLUMN "tin"."currency"."weekend_flag" IS 'Флаг отображающий доступность торговли инструментом по выходным.';
COMMENT ON COLUMN "tin"."currency"."blocked_tca_flag" IS 'Флаг заблокированного ТКС.';
COMMENT ON COLUMN "tin"."currency"."first_1min_candle_date" IS 'Дата первой минутной свечи.';
COMMENT ON COLUMN "tin"."currency"."first_1day_candle_date" IS 'Дата первой дневной свечи.';

CREATE TABLE IF NOT EXISTS "tin"."etf" (
	"figi" text NOT NULL,
	"ticker" text NOT NULL,
	"class_code" text NOT NULL,
	"isin" text NOT NULL,
	"lot" integer NOT NULL,
	"currency" text NOT NULL,
	"klong_units" bigint NULL,
	"klong_nano" integer NULL,
	"kshort_units" bigint NULL,
	"kshort_nano" integer NULL,
	"dlong_units" bigint NULL,
	"dlong_nano" integer NULL,
	"dshort_units" bigint NULL,
	"dshort_nano" integer NULL,
	"dlong_min_units" bigint NULL,
	"dlong_min_nano" integer NULL,
	"dshort_min_units" bigint NULL,
	"dshort_min_nano" integer NULL,
	"short_enabled_flag" bool NOT NULL,
	"name" text NOT NULL,
	"exchange" text NOT NULL,
	"fixed_commission_units" bigint NULL,
	"fixed_commission_nano" integer NULL,
	"focus_type" text NOT NULL,
	"released_date" timestamptz NULL,
	"num_shares_units" bigint NULL,
	"num_shares_nano" integer NULL,
	"country_of_risk" text NOT NULL,
	"country_of_risk_name" text NOT NULL,
	"sector" text NOT NULL,
	"rebalancing_freq" text NOT NULL,
	"trading_status_id" bigint NULL,
	"otc_flag" bool NOT NULL,
	"buy_available_flag" bool NOT NULL,
	"sell_available_flag" bool NOT NULL,
	"min_price_increment_units" bigint NULL,
	"min_price_increment_nano" integer NULL,
	"api_trade_available_flag" bool NOT NULL,
	"uid" text NOT NULL,
	"real_exchange_id" bigint NULL,
	"position_uid" text NOT NULL,
	"for_iis_flag" bool NOT NULL,
	"for_qual_investor_flag" bool NOT NULL,
	"weekend_flag" bool NOT NULL,
	"blocked_tca_flag" bool NOT NULL,
	"liquidity_flag" bool NOT NULL,
	"first_1min_candle_date" timestamptz NULL,
	"first_1day_candle_date" timestamptz NULL,
	CONSTRAINT "etf_pk" PRIMARY KEY ("uid"),
	CONSTRAINT "etf_trading_status_fk" FOREIGN KEY ("trading_status") REFERENCES "tin"."security_trading_status" ("id"),
	CONSTRAINT "etf_real_exchange_fk" FOREIGN KEY ("real_exchange") REFERENCES "tin"."real_exchange" ("id")
);
CREATE INDEX IF NOT EXISTS "etf_trading_status_idx" ON "tin"."etf" USING btree ("trading_status");
CREATE INDEX IF NOT EXISTS "etf_real_exchange_idx" ON "tin"."etf" USING btree ("real_exchange");
COMMENT ON TABLE "tin"."etf" IS 'Объект передачи информации об инвестиционном фонде.';
COMMENT ON COLUMN "tin"."etf"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."etf"."ticker" IS 'Тикер инструмента.';
COMMENT ON COLUMN "tin"."etf"."class_code" IS 'Класс-код (секция торгов).';
COMMENT ON COLUMN "tin"."etf"."isin" IS 'Isin-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."etf"."lot" IS 'Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру *lot*. Подробнее: [лот](https://tinkoff.github.io/investAPI/glossary#lot)';
COMMENT ON COLUMN "tin"."etf"."currency" IS 'Валюта расчётов.';
COMMENT ON COLUMN "tin"."etf"."klong_units" IS 'Коэффициент ставки риска длинной позиции по инструменту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."klong_nano" IS 'Коэффициент ставки риска длинной позиции по инструменту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."kshort_units" IS 'Коэффициент ставки риска короткой позиции по инструменту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."kshort_nano" IS 'Коэффициент ставки риска короткой позиции по инструменту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."dlong_units" IS 'Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."dlong_nano" IS 'Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."dshort_units" IS 'Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."dshort_nano" IS 'Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."dlong_min_units" IS 'Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."dlong_min_nano" IS 'Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."dshort_min_units" IS 'Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."dshort_min_nano" IS 'Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."short_enabled_flag" IS 'Признак доступности для операций в шорт.';
COMMENT ON COLUMN "tin"."etf"."name" IS 'Название инструмента.';
COMMENT ON COLUMN "tin"."etf"."exchange" IS 'Торговая площадка.';
COMMENT ON COLUMN "tin"."etf"."fixed_commission_units" IS 'Размер фиксированной комиссии фонда. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."fixed_commission_nano" IS 'Размер фиксированной комиссии фонда. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."focus_type" IS 'Возможные значения: </br>**equity** — акции;</br>**fixed_income** — облигации;</br>**mixed_allocation** — смешанный;</br>**money_market** — денежный рынок;</br>**real_estate** — недвижимость;</br>**commodity** — товары;</br>**specialty** — специальный;</br>**private_equity** — private equity;</br>**alternative_investment** — альтернативные инвестиции.';
COMMENT ON COLUMN "tin"."etf"."released_date" IS 'Дата выпуска в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."etf"."num_shares_units" IS 'Количество акций фонда в обращении. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."num_shares_nano" IS 'Количество акций фонда в обращении. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."country_of_risk" IS 'Код страны риска, т.е. страны, в которой компания ведёт основной бизнес.';
COMMENT ON COLUMN "tin"."etf"."country_of_risk_name" IS 'Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес.';
COMMENT ON COLUMN "tin"."etf"."sector" IS 'Сектор экономики.';
COMMENT ON COLUMN "tin"."etf"."rebalancing_freq" IS 'Частота ребалансировки.';
COMMENT ON COLUMN "tin"."etf"."trading_status_id" IS 'Текущий режим торгов инструмента.';
COMMENT ON COLUMN "tin"."etf"."otc_flag" IS 'Признак внебиржевой ценной бумаги.';
COMMENT ON COLUMN "tin"."etf"."buy_available_flag" IS 'Признак доступности для покупки.';
COMMENT ON COLUMN "tin"."etf"."sell_available_flag" IS 'Признак доступности для продажи.';
COMMENT ON COLUMN "tin"."etf"."min_price_increment_units" IS 'Шаг цены. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."min_price_increment_nano" IS 'Шаг цены. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."etf"."api_trade_available_flag" IS 'Параметр указывает на возможность торговать инструментом через API.';
COMMENT ON COLUMN "tin"."etf"."uid" IS 'Уникальный идентификатор инструмента.';
COMMENT ON COLUMN "tin"."etf"."real_exchange_id" IS 'Реальная площадка исполнения расчётов.';
COMMENT ON COLUMN "tin"."etf"."position_uid" IS 'Уникальный идентификатор позиции инструмента.';
COMMENT ON COLUMN "tin"."etf"."for_iis_flag" IS 'Признак доступности для ИИС.';
COMMENT ON COLUMN "tin"."etf"."for_qual_investor_flag" IS 'Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов.';
COMMENT ON COLUMN "tin"."etf"."weekend_flag" IS 'Флаг отображающий доступность торговли инструментом по выходным.';
COMMENT ON COLUMN "tin"."etf"."blocked_tca_flag" IS 'Флаг заблокированного ТКС.';
COMMENT ON COLUMN "tin"."etf"."liquidity_flag" IS 'Флаг достаточной ликвидности';
COMMENT ON COLUMN "tin"."etf"."first_1min_candle_date" IS 'Дата первой минутной свечи.';
COMMENT ON COLUMN "tin"."etf"."first_1day_candle_date" IS 'Дата первой дневной свечи.';

CREATE TABLE IF NOT EXISTS "tin"."future" (
	"figi" text NOT NULL,
	"ticker" text NOT NULL,
	"class_code" text NOT NULL,
	"lot" integer NOT NULL,
	"currency" text NOT NULL,
	"klong_units" bigint NULL,
	"klong_nano" integer NULL,
	"kshort_units" bigint NULL,
	"kshort_nano" integer NULL,
	"dlong_units" bigint NULL,
	"dlong_nano" integer NULL,
	"dshort_units" bigint NULL,
	"dshort_nano" integer NULL,
	"dlong_min_units" bigint NULL,
	"dlong_min_nano" integer NULL,
	"dshort_min_units" bigint NULL,
	"dshort_min_nano" integer NULL,
	"short_enabled_flag" bool NOT NULL,
	"name" text NOT NULL,
	"exchange" text NOT NULL,
	"first_trade_date" timestamptz NULL,
	"last_trade_date" timestamptz NULL,
	"futures_type" text NOT NULL,
	"asset_type" text NOT NULL,
	"basic_asset" text NOT NULL,
	"basic_asset_size_units" bigint NULL,
	"basic_asset_size_nano" integer NULL,
	"country_of_risk" text NOT NULL,
	"country_of_risk_name" text NOT NULL,
	"sector" text NOT NULL,
	"expiration_date" timestamptz NULL,
	"trading_status_id" bigint NULL,
	"otc_flag" bool NOT NULL,
	"buy_available_flag" bool NOT NULL,
	"sell_available_flag" bool NOT NULL,
	"min_price_increment_units" bigint NULL,
	"min_price_increment_nano" integer NULL,
	"api_trade_available_flag" bool NOT NULL,
	"uid" text NOT NULL,
	"real_exchange_id" bigint NULL,
	"position_uid" text NOT NULL,
	"basic_asset_position_uid" text NOT NULL,
	"for_iis_flag" bool NOT NULL,
	"for_qual_investor_flag" bool NOT NULL,
	"weekend_flag" bool NOT NULL,
	"blocked_tca_flag" bool NOT NULL,
	"first_1min_candle_date" timestamptz NULL,
	"first_1day_candle_date" timestamptz NULL,
	CONSTRAINT "future_pk" PRIMARY KEY ("uid"),
	CONSTRAINT "future_trading_status_fk" FOREIGN KEY ("trading_status") REFERENCES "tin"."security_trading_status" ("id"),
	CONSTRAINT "future_real_exchange_fk" FOREIGN KEY ("real_exchange") REFERENCES "tin"."real_exchange" ("id")
);
CREATE INDEX IF NOT EXISTS "future_trading_status_idx" ON "tin"."future" USING btree ("trading_status");
CREATE INDEX IF NOT EXISTS "future_real_exchange_idx" ON "tin"."future" USING btree ("real_exchange");
COMMENT ON TABLE "tin"."future" IS 'Объект передачи информации о фьючерсе.';
COMMENT ON COLUMN "tin"."future"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."future"."ticker" IS 'Тикер инструмента.';
COMMENT ON COLUMN "tin"."future"."class_code" IS 'Класс-код (секция торгов).';
COMMENT ON COLUMN "tin"."future"."lot" IS 'Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру *lot*. Подробнее: [лот](https://tinkoff.github.io/investAPI/glossary#lot)';
COMMENT ON COLUMN "tin"."future"."currency" IS 'Валюта расчётов.';
COMMENT ON COLUMN "tin"."future"."klong_units" IS 'Коэффициент ставки риска длинной позиции по клиенту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."klong_nano" IS 'Коэффициент ставки риска длинной позиции по клиенту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."kshort_units" IS 'Коэффициент ставки риска короткой позиции по клиенту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."kshort_nano" IS 'Коэффициент ставки риска короткой позиции по клиенту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."dlong_units" IS 'Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."dlong_nano" IS 'Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."dshort_units" IS 'Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."dshort_nano" IS 'Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."dlong_min_units" IS 'Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."dlong_min_nano" IS 'Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."dshort_min_units" IS 'Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."dshort_min_nano" IS 'Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."short_enabled_flag" IS 'Признак доступности для операций шорт.';
COMMENT ON COLUMN "tin"."future"."name" IS 'Название инструмента.';
COMMENT ON COLUMN "tin"."future"."exchange" IS 'Торговая площадка.';
COMMENT ON COLUMN "tin"."future"."first_trade_date" IS 'Дата начала обращения контракта в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."future"."last_trade_date" IS 'Дата в часовом поясе UTC, до которой возможно проведение операций с фьючерсом.';
COMMENT ON COLUMN "tin"."future"."futures_type" IS 'Тип фьючерса. Возможные значения: </br>**physical_delivery** — физические поставки; </br>**cash_settlement** — денежный эквивалент.';
COMMENT ON COLUMN "tin"."future"."asset_type" IS 'Тип актива. Возможные значения: </br>**commodity** — товар; </br>**currency** — валюта; </br>**security** — ценная бумага; </br>**index** — индекс.';
COMMENT ON COLUMN "tin"."future"."basic_asset" IS 'Основной актив.';
COMMENT ON COLUMN "tin"."future"."basic_asset_size_units" IS 'Размер основного актива. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."basic_asset_size_nano" IS 'Размер основного актива. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."country_of_risk" IS 'Код страны риска, т.е. страны, в которой компания ведёт основной бизнес.';
COMMENT ON COLUMN "tin"."future"."country_of_risk_name" IS 'Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес.';
COMMENT ON COLUMN "tin"."future"."sector" IS 'Сектор экономики.';
COMMENT ON COLUMN "tin"."future"."expiration_date" IS 'Дата истечения срока в часов поясе UTC.';
COMMENT ON COLUMN "tin"."future"."trading_status_id" IS 'Текущий режим торгов инструмента.';
COMMENT ON COLUMN "tin"."future"."otc_flag" IS 'Признак внебиржевой ценной бумаги.';
COMMENT ON COLUMN "tin"."future"."buy_available_flag" IS 'Признак доступности для покупки.';
COMMENT ON COLUMN "tin"."future"."sell_available_flag" IS 'Признак доступности для продажи.';
COMMENT ON COLUMN "tin"."future"."min_price_increment_units" IS 'Шаг цены. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."min_price_increment_nano" IS 'Шаг цены. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."future"."api_trade_available_flag" IS 'Параметр указывает на возможность торговать инструментом через API.';
COMMENT ON COLUMN "tin"."future"."uid" IS 'Уникальный идентификатор инструмента.';
COMMENT ON COLUMN "tin"."future"."real_exchange_id" IS 'Реальная площадка исполнения расчётов.';
COMMENT ON COLUMN "tin"."future"."position_uid" IS 'Уникальный идентификатор позиции инструмента.';
COMMENT ON COLUMN "tin"."future"."basic_asset_position_uid" IS 'Уникальный идентификатор позиции основного инструмента.';
COMMENT ON COLUMN "tin"."future"."for_iis_flag" IS 'Признак доступности для ИИС.';
COMMENT ON COLUMN "tin"."future"."for_qual_investor_flag" IS 'Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов.';
COMMENT ON COLUMN "tin"."future"."weekend_flag" IS 'Флаг отображающий доступность торговли инструментом по выходным.';
COMMENT ON COLUMN "tin"."future"."blocked_tca_flag" IS 'Флаг заблокированного ТКС.';
COMMENT ON COLUMN "tin"."future"."first_1min_candle_date" IS 'Дата первой минутной свечи.';
COMMENT ON COLUMN "tin"."future"."first_1day_candle_date" IS 'Дата первой дневной свечи.';

CREATE TABLE IF NOT EXISTS "tin"."operation" (
	"id" text NOT NULL,
	"parent_operation_id" text NOT NULL,
	"currency" text NOT NULL,
	"payment_currency" text NULL,
	"payment_units" bigint NULL,
	"payment_nano" integer NULL,
	"price_currency" text NULL,
	"price_units" bigint NULL,
	"price_nano" integer NULL,
	"state_id" bigint NULL,
	"quantity" bigint NOT NULL,
	"quantity_rest" bigint NOT NULL,
	"figi" text NOT NULL,
	"instrument_type" text NOT NULL,
	"date" timestamptz NULL,
	"type" text NOT NULL,
	"operation_type_id" bigint NULL,
	"asset_uid" text NOT NULL,
	"position_uid" text NOT NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "operation_pk" PRIMARY KEY ("id"),
	CONSTRAINT "operation_state_fk" FOREIGN KEY ("state") REFERENCES "tin"."operation_state" ("id"),
	CONSTRAINT "operation_operation_type_fk" FOREIGN KEY ("operation_type") REFERENCES "tin"."operation_type" ("id")
);
CREATE INDEX IF NOT EXISTS "operation_state_idx" ON "tin"."operation" USING btree ("state");
CREATE INDEX IF NOT EXISTS "operation_operation_type_idx" ON "tin"."operation" USING btree ("operation_type");
COMMENT ON TABLE "tin"."operation" IS 'Данные по операции.';
COMMENT ON COLUMN "tin"."operation"."id" IS 'Идентификатор операции.';
COMMENT ON COLUMN "tin"."operation"."parent_operation_id" IS 'Идентификатор родительской операции.';
COMMENT ON COLUMN "tin"."operation"."currency" IS 'Валюта операции.';
COMMENT ON COLUMN "tin"."operation"."payment_currency" IS 'Сумма операции. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."operation"."payment_units" IS 'Сумма операции. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."operation"."payment_nano" IS 'Сумма операции. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."operation"."price_currency" IS 'Цена операции за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."operation"."price_units" IS 'Цена операции за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."operation"."price_nano" IS 'Цена операции за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."operation"."state_id" IS 'Статус операции.';
COMMENT ON COLUMN "tin"."operation"."quantity" IS 'Количество единиц инструмента.';
COMMENT ON COLUMN "tin"."operation"."quantity_rest" IS 'Неисполненный остаток по сделке.';
COMMENT ON COLUMN "tin"."operation"."figi" IS 'Figi-идентификатор инструмента, связанного с операцией.';
COMMENT ON COLUMN "tin"."operation"."instrument_type" IS 'Тип инструмента. Возможные значения: </br>**bond** — облигация; </br>**share** — акция; </br>**currency** — валюта; </br>**etf** — фонд; </br>**futures** — фьючерс.';
COMMENT ON COLUMN "tin"."operation"."date" IS 'Дата и время операции в формате часовом поясе UTC.';
COMMENT ON COLUMN "tin"."operation"."type" IS 'Текстовое описание типа операции.';
COMMENT ON COLUMN "tin"."operation"."operation_type_id" IS 'Тип операции.';
COMMENT ON COLUMN "tin"."operation"."asset_uid" IS 'Идентификатор актива';
COMMENT ON COLUMN "tin"."operation"."position_uid" IS 'position_uid-идентификатора инструмента.';
COMMENT ON COLUMN "tin"."operation"."instrument_uid" IS 'Уникальный идентификатор инструмента.';

CREATE TABLE IF NOT EXISTS "tin"."post_order_request" (
	"quantity" bigint NOT NULL,
	"price_units" bigint NULL,
	"price_nano" integer NULL,
	"direction_id" bigint NULL,
	"account_id" text NOT NULL,
	"order_type_id" bigint NULL,
	"order_id" text NOT NULL,
	"instrument_id" text NOT NULL,
	CONSTRAINT "post_order_request_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "post_order_request_direction_fk" FOREIGN KEY ("direction") REFERENCES "tin"."order_direction" ("id"),
	CONSTRAINT "post_order_request_order_type_fk" FOREIGN KEY ("order_type") REFERENCES "tin"."order_type" ("id")
);
CREATE INDEX IF NOT EXISTS "post_order_request_direction_idx" ON "tin"."post_order_request" USING btree ("direction");
CREATE INDEX IF NOT EXISTS "post_order_request_order_type_idx" ON "tin"."post_order_request" USING btree ("order_type");
COMMENT ON TABLE "tin"."post_order_request" IS 'Запрос выставления торгового поручения.';
COMMENT ON COLUMN "tin"."post_order_request"."quantity" IS 'Количество лотов.';
COMMENT ON COLUMN "tin"."post_order_request"."price_units" IS 'Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Игнорируется для рыночных поручений. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_request"."price_nano" IS 'Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Игнорируется для рыночных поручений. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_request"."direction_id" IS 'Направление операции.';
COMMENT ON COLUMN "tin"."post_order_request"."account_id" IS 'Номер счёта.';
COMMENT ON COLUMN "tin"."post_order_request"."order_type_id" IS 'Тип заявки.';
COMMENT ON COLUMN "tin"."post_order_request"."order_id" IS 'Идентификатор запроса выставления поручения для целей идемпотентности. Максимальная длина 36 символов.';
COMMENT ON COLUMN "tin"."post_order_request"."instrument_id" IS 'Идентификатор инструмента, принимает значения Figi или Instrument_uid.';

CREATE TABLE IF NOT EXISTS "tin"."stop_order" (
	"stop_order_id" text NOT NULL,
	"lots_requested" bigint NOT NULL,
	"figi" text NOT NULL,
	"direction_id" bigint NULL,
	"currency" text NOT NULL,
	"order_type_id" bigint NULL,
	"create_date" timestamptz NULL,
	"activation_date_time" timestamptz NULL,
	"expiration_time" timestamptz NULL,
	"price_currency" text NULL,
	"price_units" bigint NULL,
	"price_nano" integer NULL,
	"stop_price_currency" text NULL,
	"stop_price_units" bigint NULL,
	"stop_price_nano" integer NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "stop_order_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "stop_order_direction_fk" FOREIGN KEY ("direction") REFERENCES "tin"."stop_order_direction" ("id"),
	CONSTRAINT "stop_order_order_type_fk" FOREIGN KEY ("order_type") REFERENCES "tin"."stop_order_type" ("id")
);
CREATE INDEX IF NOT EXISTS "stop_order_direction_idx" ON "tin"."stop_order" USING btree ("direction");
CREATE INDEX IF NOT EXISTS "stop_order_order_type_idx" ON "tin"."stop_order" USING btree ("order_type");
COMMENT ON TABLE "tin"."stop_order" IS 'Информация о стоп-заявке.';
COMMENT ON COLUMN "tin"."stop_order"."stop_order_id" IS 'Идентификатор-идентификатор стоп-заявки.';
COMMENT ON COLUMN "tin"."stop_order"."lots_requested" IS 'Запрошено лотов.';
COMMENT ON COLUMN "tin"."stop_order"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."stop_order"."direction_id" IS 'Направление операции.';
COMMENT ON COLUMN "tin"."stop_order"."currency" IS 'Валюта стоп-заявки.';
COMMENT ON COLUMN "tin"."stop_order"."order_type_id" IS 'Тип стоп-заявки.';
COMMENT ON COLUMN "tin"."stop_order"."create_date" IS 'Дата и время выставления заявки в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."stop_order"."activation_date_time" IS 'Дата и время конвертации стоп-заявки в биржевую в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."stop_order"."expiration_time" IS 'Дата и время снятия заявки в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."stop_order"."price_currency" IS 'Цена заявки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."stop_order"."price_units" IS 'Цена заявки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."stop_order"."price_nano" IS 'Цена заявки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."stop_order"."stop_price_currency" IS 'Цена активации стоп-заявки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."stop_order"."stop_price_units" IS 'Цена активации стоп-заявки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."stop_order"."stop_price_nano" IS 'Цена активации стоп-заявки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."stop_order"."instrument_uid" IS 'instrument_uid идентификатор инструмента.';

CREATE TABLE IF NOT EXISTS "tin"."account" (
	"id" text NOT NULL,
	"type_id" bigint NULL,
	"name" text NOT NULL,
	"status_id" bigint NULL,
	"opened_date" timestamptz NULL,
	"closed_date" timestamptz NULL,
	"access_level_id" bigint NULL,
	CONSTRAINT "account_pk" PRIMARY KEY ("id"),
	CONSTRAINT "account_type_fk" FOREIGN KEY ("type") REFERENCES "tin"."account_type" ("id"),
	CONSTRAINT "account_status_fk" FOREIGN KEY ("status") REFERENCES "tin"."account_status" ("id"),
	CONSTRAINT "account_access_level_fk" FOREIGN KEY ("access_level") REFERENCES "tin"."access_level" ("id")
);
CREATE INDEX IF NOT EXISTS "account_type_idx" ON "tin"."account" USING btree ("type");
CREATE INDEX IF NOT EXISTS "account_status_idx" ON "tin"."account" USING btree ("status");
CREATE INDEX IF NOT EXISTS "account_access_level_idx" ON "tin"."account" USING btree ("access_level");
COMMENT ON TABLE "tin"."account" IS 'Информация о счёте.';
COMMENT ON COLUMN "tin"."account"."id" IS 'Идентификатор счёта.';
COMMENT ON COLUMN "tin"."account"."type_id" IS 'Тип счёта.';
COMMENT ON COLUMN "tin"."account"."name" IS 'Название счёта.';
COMMENT ON COLUMN "tin"."account"."status_id" IS 'Статус счёта.';
COMMENT ON COLUMN "tin"."account"."opened_date" IS 'Дата открытия счёта в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."account"."closed_date" IS 'Дата закрытия счёта в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."account"."access_level_id" IS 'Уровень доступа к текущему счёту (определяется токеном).';

CREATE TABLE IF NOT EXISTS "tin"."bond" (
	"figi" text NOT NULL,
	"ticker" text NOT NULL,
	"class_code" text NOT NULL,
	"isin" text NOT NULL,
	"lot" integer NOT NULL,
	"currency" text NOT NULL,
	"klong_units" bigint NULL,
	"klong_nano" integer NULL,
	"kshort_units" bigint NULL,
	"kshort_nano" integer NULL,
	"dlong_units" bigint NULL,
	"dlong_nano" integer NULL,
	"dshort_units" bigint NULL,
	"dshort_nano" integer NULL,
	"dlong_min_units" bigint NULL,
	"dlong_min_nano" integer NULL,
	"dshort_min_units" bigint NULL,
	"dshort_min_nano" integer NULL,
	"short_enabled_flag" bool NOT NULL,
	"name" text NOT NULL,
	"exchange" text NOT NULL,
	"coupon_quantity_per_year" integer NOT NULL,
	"maturity_date" timestamptz NULL,
	"nominal_currency" text NULL,
	"nominal_units" bigint NULL,
	"nominal_nano" integer NULL,
	"initial_nominal_currency" text NULL,
	"initial_nominal_units" bigint NULL,
	"initial_nominal_nano" integer NULL,
	"state_reg_date" timestamptz NULL,
	"placement_date" timestamptz NULL,
	"placement_price_currency" text NULL,
	"placement_price_units" bigint NULL,
	"placement_price_nano" integer NULL,
	"aci_value_currency" text NULL,
	"aci_value_units" bigint NULL,
	"aci_value_nano" integer NULL,
	"country_of_risk" text NOT NULL,
	"country_of_risk_name" text NOT NULL,
	"sector" text NOT NULL,
	"issue_kind" text NOT NULL,
	"issue_size" bigint NOT NULL,
	"issue_size_plan" bigint NOT NULL,
	"trading_status_id" bigint NULL,
	"otc_flag" bool NOT NULL,
	"buy_available_flag" bool NOT NULL,
	"sell_available_flag" bool NOT NULL,
	"floating_coupon_flag" bool NOT NULL,
	"perpetual_flag" bool NOT NULL,
	"amortization_flag" bool NOT NULL,
	"min_price_increment_units" bigint NULL,
	"min_price_increment_nano" integer NULL,
	"api_trade_available_flag" bool NOT NULL,
	"uid" text NOT NULL,
	"real_exchange_id" bigint NULL,
	"position_uid" text NOT NULL,
	"for_iis_flag" bool NOT NULL,
	"for_qual_investor_flag" bool NOT NULL,
	"weekend_flag" bool NOT NULL,
	"blocked_tca_flag" bool NOT NULL,
	"subordinated_flag" bool NOT NULL,
	"liquidity_flag" bool NOT NULL,
	"first_1min_candle_date" timestamptz NULL,
	"first_1day_candle_date" timestamptz NULL,
	"risk_level_id" bigint NULL,
	CONSTRAINT "bond_pk" PRIMARY KEY ("uid"),
	CONSTRAINT "bond_trading_status_fk" FOREIGN KEY ("trading_status") REFERENCES "tin"."security_trading_status" ("id"),
	CONSTRAINT "bond_real_exchange_fk" FOREIGN KEY ("real_exchange") REFERENCES "tin"."real_exchange" ("id"),
	CONSTRAINT "bond_risk_level_fk" FOREIGN KEY ("risk_level") REFERENCES "tin"."risk_level" ("id")
);
CREATE INDEX IF NOT EXISTS "bond_trading_status_idx" ON "tin"."bond" USING btree ("trading_status");
CREATE INDEX IF NOT EXISTS "bond_real_exchange_idx" ON "tin"."bond" USING btree ("real_exchange");
CREATE INDEX IF NOT EXISTS "bond_risk_level_idx" ON "tin"."bond" USING btree ("risk_level");
COMMENT ON TABLE "tin"."bond" IS 'Объект передачи информации об облигации.';
COMMENT ON COLUMN "tin"."bond"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."bond"."ticker" IS 'Тикер инструмента.';
COMMENT ON COLUMN "tin"."bond"."class_code" IS 'Класс-код (секция торгов).';
COMMENT ON COLUMN "tin"."bond"."isin" IS 'Isin-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."bond"."lot" IS 'Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру *lot*. Подробнее: [лот](https://tinkoff.github.io/investAPI/glossary#lot)';
COMMENT ON COLUMN "tin"."bond"."currency" IS 'Валюта расчётов.';
COMMENT ON COLUMN "tin"."bond"."klong_units" IS 'Коэффициент ставки риска длинной позиции по инструменту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."klong_nano" IS 'Коэффициент ставки риска длинной позиции по инструменту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."kshort_units" IS 'Коэффициент ставки риска короткой позиции по инструменту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."kshort_nano" IS 'Коэффициент ставки риска короткой позиции по инструменту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."dlong_units" IS 'Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."dlong_nano" IS 'Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."dshort_units" IS 'Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."dshort_nano" IS 'Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."dlong_min_units" IS 'Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."dlong_min_nano" IS 'Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."dshort_min_units" IS 'Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."dshort_min_nano" IS 'Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."short_enabled_flag" IS 'Признак доступности для операций в шорт.';
COMMENT ON COLUMN "tin"."bond"."name" IS 'Название инструмента.';
COMMENT ON COLUMN "tin"."bond"."exchange" IS 'Торговая площадка.';
COMMENT ON COLUMN "tin"."bond"."coupon_quantity_per_year" IS 'Количество выплат по купонам в год.';
COMMENT ON COLUMN "tin"."bond"."maturity_date" IS 'Дата погашения облигации в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."bond"."nominal_currency" IS 'Номинал облигации. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."bond"."nominal_units" IS 'Номинал облигации. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."nominal_nano" IS 'Номинал облигации. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."initial_nominal_currency" IS 'Первоначальный номинал облигации. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."bond"."initial_nominal_units" IS 'Первоначальный номинал облигации. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."initial_nominal_nano" IS 'Первоначальный номинал облигации. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."state_reg_date" IS 'Дата выпуска облигации в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."bond"."placement_date" IS 'Дата размещения в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."bond"."placement_price_currency" IS 'Цена размещения. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."bond"."placement_price_units" IS 'Цена размещения. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."placement_price_nano" IS 'Цена размещения. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."aci_value_currency" IS 'Значение НКД (накопленного купонного дохода) на дату. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."bond"."aci_value_units" IS 'Значение НКД (накопленного купонного дохода) на дату. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."aci_value_nano" IS 'Значение НКД (накопленного купонного дохода) на дату. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."country_of_risk" IS 'Код страны риска, т.е. страны, в которой компания ведёт основной бизнес.';
COMMENT ON COLUMN "tin"."bond"."country_of_risk_name" IS 'Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес.';
COMMENT ON COLUMN "tin"."bond"."sector" IS 'Сектор экономики.';
COMMENT ON COLUMN "tin"."bond"."issue_kind" IS 'Форма выпуска. Возможные значения: </br>**documentary** — документарная; </br>**non_documentary** — бездокументарная.';
COMMENT ON COLUMN "tin"."bond"."issue_size" IS 'Размер выпуска.';
COMMENT ON COLUMN "tin"."bond"."issue_size_plan" IS 'Плановый размер выпуска.';
COMMENT ON COLUMN "tin"."bond"."trading_status_id" IS 'Текущий режим торгов инструмента.';
COMMENT ON COLUMN "tin"."bond"."otc_flag" IS 'Признак внебиржевой ценной бумаги.';
COMMENT ON COLUMN "tin"."bond"."buy_available_flag" IS 'Признак доступности для покупки.';
COMMENT ON COLUMN "tin"."bond"."sell_available_flag" IS 'Признак доступности для продажи.';
COMMENT ON COLUMN "tin"."bond"."floating_coupon_flag" IS 'Признак облигации с плавающим купоном.';
COMMENT ON COLUMN "tin"."bond"."perpetual_flag" IS 'Признак бессрочной облигации.';
COMMENT ON COLUMN "tin"."bond"."amortization_flag" IS 'Признак облигации с амортизацией долга.';
COMMENT ON COLUMN "tin"."bond"."min_price_increment_units" IS 'Шаг цены. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."min_price_increment_nano" IS 'Шаг цены. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."bond"."api_trade_available_flag" IS 'Параметр указывает на возможность торговать инструментом через API.';
COMMENT ON COLUMN "tin"."bond"."uid" IS 'Уникальный идентификатор инструмента.';
COMMENT ON COLUMN "tin"."bond"."real_exchange_id" IS 'Реальная площадка исполнения расчётов.';
COMMENT ON COLUMN "tin"."bond"."position_uid" IS 'Уникальный идентификатор позиции инструмента.';
COMMENT ON COLUMN "tin"."bond"."for_iis_flag" IS 'Признак доступности для ИИС.';
COMMENT ON COLUMN "tin"."bond"."for_qual_investor_flag" IS 'Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов.';
COMMENT ON COLUMN "tin"."bond"."weekend_flag" IS 'Флаг отображающий доступность торговли инструментом по выходным';
COMMENT ON COLUMN "tin"."bond"."blocked_tca_flag" IS 'Флаг заблокированного ТКС';
COMMENT ON COLUMN "tin"."bond"."subordinated_flag" IS 'Признак субординированной облигации.';
COMMENT ON COLUMN "tin"."bond"."liquidity_flag" IS 'Флаг достаточной ликвидности';
COMMENT ON COLUMN "tin"."bond"."first_1min_candle_date" IS 'Дата первой минутной свечи.';
COMMENT ON COLUMN "tin"."bond"."first_1day_candle_date" IS 'Дата первой дневной свечи.';
COMMENT ON COLUMN "tin"."bond"."risk_level_id" IS 'Уровень риска.';

CREATE TABLE IF NOT EXISTS "tin"."instrument" (
	"figi" text NOT NULL,
	"ticker" text NOT NULL,
	"class_code" text NOT NULL,
	"isin" text NOT NULL,
	"lot" integer NOT NULL,
	"currency" text NOT NULL,
	"klong_units" bigint NULL,
	"klong_nano" integer NULL,
	"kshort_units" bigint NULL,
	"kshort_nano" integer NULL,
	"dlong_units" bigint NULL,
	"dlong_nano" integer NULL,
	"dshort_units" bigint NULL,
	"dshort_nano" integer NULL,
	"dlong_min_units" bigint NULL,
	"dlong_min_nano" integer NULL,
	"dshort_min_units" bigint NULL,
	"dshort_min_nano" integer NULL,
	"short_enabled_flag" bool NOT NULL,
	"name" text NOT NULL,
	"exchange" text NOT NULL,
	"country_of_risk" text NOT NULL,
	"country_of_risk_name" text NOT NULL,
	"instrument_type" text NOT NULL,
	"trading_status_id" bigint NULL,
	"otc_flag" bool NOT NULL,
	"buy_available_flag" bool NOT NULL,
	"sell_available_flag" bool NOT NULL,
	"min_price_increment_units" bigint NULL,
	"min_price_increment_nano" integer NULL,
	"api_trade_available_flag" bool NOT NULL,
	"uid" text NOT NULL,
	"real_exchange_id" bigint NULL,
	"position_uid" text NOT NULL,
	"for_iis_flag" bool NOT NULL,
	"for_qual_investor_flag" bool NOT NULL,
	"weekend_flag" bool NOT NULL,
	"blocked_tca_flag" bool NOT NULL,
	"instrument_kind_id" bigint NULL,
	"first_1min_candle_date" timestamptz NULL,
	"first_1day_candle_date" timestamptz NULL,
	CONSTRAINT "instrument_pk" PRIMARY KEY ("uid"),
	CONSTRAINT "instrument_trading_status_fk" FOREIGN KEY ("trading_status") REFERENCES "tin"."security_trading_status" ("id"),
	CONSTRAINT "instrument_real_exchange_fk" FOREIGN KEY ("real_exchange") REFERENCES "tin"."real_exchange" ("id"),
	CONSTRAINT "instrument_instrument_kind_fk" FOREIGN KEY ("instrument_kind") REFERENCES "tin"."instrument_type" ("id")
);
CREATE INDEX IF NOT EXISTS "instrument_trading_status_idx" ON "tin"."instrument" USING btree ("trading_status");
CREATE INDEX IF NOT EXISTS "instrument_real_exchange_idx" ON "tin"."instrument" USING btree ("real_exchange");
CREATE INDEX IF NOT EXISTS "instrument_instrument_kind_idx" ON "tin"."instrument" USING btree ("instrument_kind");
COMMENT ON TABLE "tin"."instrument" IS 'Объект передачи основной информации об инструменте.';
COMMENT ON COLUMN "tin"."instrument"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."instrument"."ticker" IS 'Тикер инструмента.';
COMMENT ON COLUMN "tin"."instrument"."class_code" IS 'Класс-код инструмента.';
COMMENT ON COLUMN "tin"."instrument"."isin" IS 'Isin-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."instrument"."lot" IS 'Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру *lot*. Подробнее: [лот](https://tinkoff.github.io/investAPI/glossary#lot)';
COMMENT ON COLUMN "tin"."instrument"."currency" IS 'Валюта расчётов.';
COMMENT ON COLUMN "tin"."instrument"."klong_units" IS 'Коэффициент ставки риска длинной позиции по инструменту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."klong_nano" IS 'Коэффициент ставки риска длинной позиции по инструменту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."kshort_units" IS 'Коэффициент ставки риска короткой позиции по инструменту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."kshort_nano" IS 'Коэффициент ставки риска короткой позиции по инструменту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."dlong_units" IS 'Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."dlong_nano" IS 'Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."dshort_units" IS 'Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."dshort_nano" IS 'Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."dlong_min_units" IS 'Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."dlong_min_nano" IS 'Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."dshort_min_units" IS 'Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."dshort_min_nano" IS 'Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."short_enabled_flag" IS 'Признак доступности для операций в шорт.';
COMMENT ON COLUMN "tin"."instrument"."name" IS 'Название инструмента.';
COMMENT ON COLUMN "tin"."instrument"."exchange" IS 'Торговая площадка.';
COMMENT ON COLUMN "tin"."instrument"."country_of_risk" IS 'Код страны риска, т.е. страны, в которой компания ведёт основной бизнес.';
COMMENT ON COLUMN "tin"."instrument"."country_of_risk_name" IS 'Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес.';
COMMENT ON COLUMN "tin"."instrument"."instrument_type" IS 'Тип инструмента.';
COMMENT ON COLUMN "tin"."instrument"."trading_status_id" IS 'Текущий режим торгов инструмента.';
COMMENT ON COLUMN "tin"."instrument"."otc_flag" IS 'Признак внебиржевой ценной бумаги.';
COMMENT ON COLUMN "tin"."instrument"."buy_available_flag" IS 'Признак доступности для покупки.';
COMMENT ON COLUMN "tin"."instrument"."sell_available_flag" IS 'Признак доступности для продажи.';
COMMENT ON COLUMN "tin"."instrument"."min_price_increment_units" IS 'Шаг цены. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."min_price_increment_nano" IS 'Шаг цены. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."instrument"."api_trade_available_flag" IS 'Параметр указывает на возможность торговать инструментом через API.';
COMMENT ON COLUMN "tin"."instrument"."uid" IS 'Уникальный идентификатор инструмента.';
COMMENT ON COLUMN "tin"."instrument"."real_exchange_id" IS 'Реальная площадка исполнения расчётов.';
COMMENT ON COLUMN "tin"."instrument"."position_uid" IS 'Уникальный идентификатор позиции инструмента.';
COMMENT ON COLUMN "tin"."instrument"."for_iis_flag" IS 'Признак доступности для ИИС.';
COMMENT ON COLUMN "tin"."instrument"."for_qual_investor_flag" IS 'Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов.';
COMMENT ON COLUMN "tin"."instrument"."weekend_flag" IS 'Флаг отображающий доступность торговли инструментом по выходным';
COMMENT ON COLUMN "tin"."instrument"."blocked_tca_flag" IS 'Флаг заблокированного ТКС';
COMMENT ON COLUMN "tin"."instrument"."instrument_kind_id" IS 'Тип инструмента.';
COMMENT ON COLUMN "tin"."instrument"."first_1min_candle_date" IS 'Дата первой минутной свечи.';
COMMENT ON COLUMN "tin"."instrument"."first_1day_candle_date" IS 'Дата первой дневной свечи.';

CREATE TABLE IF NOT EXISTS "tin"."order_state" (
	"order_id" text NOT NULL,
	"execution_report_status_id" bigint NULL,
	"lots_requested" bigint NOT NULL,
	"lots_executed" bigint NOT NULL,
	"initial_order_price_currency" text NULL,
	"initial_order_price_units" bigint NULL,
	"initial_order_price_nano" integer NULL,
	"executed_order_price_currency" text NULL,
	"executed_order_price_units" bigint NULL,
	"executed_order_price_nano" integer NULL,
	"total_order_amount_currency" text NULL,
	"total_order_amount_units" bigint NULL,
	"total_order_amount_nano" integer NULL,
	"average_position_price_currency" text NULL,
	"average_position_price_units" bigint NULL,
	"average_position_price_nano" integer NULL,
	"initial_commission_currency" text NULL,
	"initial_commission_units" bigint NULL,
	"initial_commission_nano" integer NULL,
	"executed_commission_currency" text NULL,
	"executed_commission_units" bigint NULL,
	"executed_commission_nano" integer NULL,
	"figi" text NOT NULL,
	"direction_id" bigint NULL,
	"initial_security_price_currency" text NULL,
	"initial_security_price_units" bigint NULL,
	"initial_security_price_nano" integer NULL,
	"service_commission_currency" text NULL,
	"service_commission_units" bigint NULL,
	"service_commission_nano" integer NULL,
	"currency" text NOT NULL,
	"order_type_id" bigint NULL,
	"order_date" timestamptz NULL,
	"instrument_uid" text NOT NULL,
	"order_request_id" text NOT NULL,
	CONSTRAINT "order_state_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "order_state_execution_report_status_fk" FOREIGN KEY ("execution_report_status") REFERENCES "tin"."order_execution_report_status" ("id"),
	CONSTRAINT "order_state_direction_fk" FOREIGN KEY ("direction") REFERENCES "tin"."order_direction" ("id"),
	CONSTRAINT "order_state_order_type_fk" FOREIGN KEY ("order_type") REFERENCES "tin"."order_type" ("id")
);
CREATE INDEX IF NOT EXISTS "order_state_execution_report_status_idx" ON "tin"."order_state" USING btree ("execution_report_status");
CREATE INDEX IF NOT EXISTS "order_state_direction_idx" ON "tin"."order_state" USING btree ("direction");
CREATE INDEX IF NOT EXISTS "order_state_order_type_idx" ON "tin"."order_state" USING btree ("order_type");
COMMENT ON TABLE "tin"."order_state" IS 'Информация о торговом поручении.';
COMMENT ON COLUMN "tin"."order_state"."order_id" IS 'Биржевой идентификатор заявки.';
COMMENT ON COLUMN "tin"."order_state"."execution_report_status_id" IS 'Текущий статус заявки.';
COMMENT ON COLUMN "tin"."order_state"."lots_requested" IS 'Запрошено лотов.';
COMMENT ON COLUMN "tin"."order_state"."lots_executed" IS 'Исполнено лотов.';
COMMENT ON COLUMN "tin"."order_state"."initial_order_price_currency" IS 'Начальная цена заявки. Произведение количества запрошенных лотов на цену. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."order_state"."initial_order_price_units" IS 'Начальная цена заявки. Произведение количества запрошенных лотов на цену. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."initial_order_price_nano" IS 'Начальная цена заявки. Произведение количества запрошенных лотов на цену. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."executed_order_price_currency" IS 'Исполненная цена заявки. Произведение средней цены покупки на количество лотов. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."order_state"."executed_order_price_units" IS 'Исполненная цена заявки. Произведение средней цены покупки на количество лотов. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."executed_order_price_nano" IS 'Исполненная цена заявки. Произведение средней цены покупки на количество лотов. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."total_order_amount_currency" IS 'Итоговая стоимость заявки, включающая все комиссии. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."order_state"."total_order_amount_units" IS 'Итоговая стоимость заявки, включающая все комиссии. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."total_order_amount_nano" IS 'Итоговая стоимость заявки, включающая все комиссии. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."average_position_price_currency" IS 'Средняя цена позиции по сделке. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."order_state"."average_position_price_units" IS 'Средняя цена позиции по сделке. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."average_position_price_nano" IS 'Средняя цена позиции по сделке. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."initial_commission_currency" IS 'Начальная комиссия. Комиссия, рассчитанная на момент подачи заявки. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."order_state"."initial_commission_units" IS 'Начальная комиссия. Комиссия, рассчитанная на момент подачи заявки. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."initial_commission_nano" IS 'Начальная комиссия. Комиссия, рассчитанная на момент подачи заявки. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."executed_commission_currency" IS 'Фактическая комиссия по итогам исполнения заявки. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."order_state"."executed_commission_units" IS 'Фактическая комиссия по итогам исполнения заявки. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."executed_commission_nano" IS 'Фактическая комиссия по итогам исполнения заявки. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."order_state"."direction_id" IS 'Направление заявки.';
COMMENT ON COLUMN "tin"."order_state"."initial_security_price_currency" IS 'Начальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."order_state"."initial_security_price_units" IS 'Начальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."initial_security_price_nano" IS 'Начальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."service_commission_currency" IS 'Сервисная комиссия. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."order_state"."service_commission_units" IS 'Сервисная комиссия. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."service_commission_nano" IS 'Сервисная комиссия. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."order_state"."currency" IS 'Валюта заявки.';
COMMENT ON COLUMN "tin"."order_state"."order_type_id" IS 'Тип заявки.';
COMMENT ON COLUMN "tin"."order_state"."order_date" IS 'Дата и время выставления заявки в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."order_state"."instrument_uid" IS 'UID идентификатор инструмента.';
COMMENT ON COLUMN "tin"."order_state"."order_request_id" IS 'Идентификатор ключа идемпотентности, переданный клиентом.';

CREATE TABLE IF NOT EXISTS "tin"."post_order_response" (
	"order_id" text NOT NULL,
	"execution_report_status_id" bigint NULL,
	"lots_requested" bigint NOT NULL,
	"lots_executed" bigint NOT NULL,
	"initial_order_price_currency" text NULL,
	"initial_order_price_units" bigint NULL,
	"initial_order_price_nano" integer NULL,
	"executed_order_price_currency" text NULL,
	"executed_order_price_units" bigint NULL,
	"executed_order_price_nano" integer NULL,
	"total_order_amount_currency" text NULL,
	"total_order_amount_units" bigint NULL,
	"total_order_amount_nano" integer NULL,
	"initial_commission_currency" text NULL,
	"initial_commission_units" bigint NULL,
	"initial_commission_nano" integer NULL,
	"executed_commission_currency" text NULL,
	"executed_commission_units" bigint NULL,
	"executed_commission_nano" integer NULL,
	"aci_value_currency" text NULL,
	"aci_value_units" bigint NULL,
	"aci_value_nano" integer NULL,
	"figi" text NOT NULL,
	"direction_id" bigint NULL,
	"initial_security_price_currency" text NULL,
	"initial_security_price_units" bigint NULL,
	"initial_security_price_nano" integer NULL,
	"order_type_id" bigint NULL,
	"message" text NOT NULL,
	"initial_order_price_pt_units" bigint NULL,
	"initial_order_price_pt_nano" integer NULL,
	"instrument_uid" text NOT NULL,
	CONSTRAINT "post_order_response_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "post_order_response_execution_report_status_fk" FOREIGN KEY ("execution_report_status") REFERENCES "tin"."order_execution_report_status" ("id"),
	CONSTRAINT "post_order_response_direction_fk" FOREIGN KEY ("direction") REFERENCES "tin"."order_direction" ("id"),
	CONSTRAINT "post_order_response_order_type_fk" FOREIGN KEY ("order_type") REFERENCES "tin"."order_type" ("id")
);
CREATE INDEX IF NOT EXISTS "post_order_response_execution_report_status_idx" ON "tin"."post_order_response" USING btree ("execution_report_status");
CREATE INDEX IF NOT EXISTS "post_order_response_direction_idx" ON "tin"."post_order_response" USING btree ("direction");
CREATE INDEX IF NOT EXISTS "post_order_response_order_type_idx" ON "tin"."post_order_response" USING btree ("order_type");
COMMENT ON TABLE "tin"."post_order_response" IS 'Информация о выставлении поручения.';
COMMENT ON COLUMN "tin"."post_order_response"."order_id" IS 'Биржевой идентификатор заявки.';
COMMENT ON COLUMN "tin"."post_order_response"."execution_report_status_id" IS 'Текущий статус заявки.';
COMMENT ON COLUMN "tin"."post_order_response"."lots_requested" IS 'Запрошено лотов.';
COMMENT ON COLUMN "tin"."post_order_response"."lots_executed" IS 'Исполнено лотов.';
COMMENT ON COLUMN "tin"."post_order_response"."initial_order_price_currency" IS 'Начальная цена заявки. Произведение количества запрошенных лотов на цену. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."post_order_response"."initial_order_price_units" IS 'Начальная цена заявки. Произведение количества запрошенных лотов на цену. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."initial_order_price_nano" IS 'Начальная цена заявки. Произведение количества запрошенных лотов на цену. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."executed_order_price_currency" IS 'Исполненная средняя цена 1 одного инструмента в заявки. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."post_order_response"."executed_order_price_units" IS 'Исполненная средняя цена 1 одного инструмента в заявки. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."executed_order_price_nano" IS 'Исполненная средняя цена 1 одного инструмента в заявки. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."total_order_amount_currency" IS 'Итоговая стоимость заявки, включающая все комиссии. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."post_order_response"."total_order_amount_units" IS 'Итоговая стоимость заявки, включающая все комиссии. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."total_order_amount_nano" IS 'Итоговая стоимость заявки, включающая все комиссии. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."initial_commission_currency" IS 'Начальная комиссия. Комиссия рассчитанная при выставлении заявки. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."post_order_response"."initial_commission_units" IS 'Начальная комиссия. Комиссия рассчитанная при выставлении заявки. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."initial_commission_nano" IS 'Начальная комиссия. Комиссия рассчитанная при выставлении заявки. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."executed_commission_currency" IS 'Фактическая комиссия по итогам исполнения заявки. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."post_order_response"."executed_commission_units" IS 'Фактическая комиссия по итогам исполнения заявки. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."executed_commission_nano" IS 'Фактическая комиссия по итогам исполнения заявки. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."aci_value_currency" IS 'Значение НКД (накопленного купонного дохода) на дату. Подробнее: [НКД при выставлении торговых поручений](https://tinkoff.github.io/investAPI/head-orders#coupon) / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."post_order_response"."aci_value_units" IS 'Значение НКД (накопленного купонного дохода) на дату. Подробнее: [НКД при выставлении торговых поручений](https://tinkoff.github.io/investAPI/head-orders#coupon) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."aci_value_nano" IS 'Значение НКД (накопленного купонного дохода) на дату. Подробнее: [НКД при выставлении торговых поручений](https://tinkoff.github.io/investAPI/head-orders#coupon) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."post_order_response"."direction_id" IS 'Направление сделки.';
COMMENT ON COLUMN "tin"."post_order_response"."initial_security_price_currency" IS 'Начальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."post_order_response"."initial_security_price_units" IS 'Начальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."initial_security_price_nano" IS 'Начальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."order_type_id" IS 'Тип заявки.';
COMMENT ON COLUMN "tin"."post_order_response"."message" IS 'Дополнительные данные об исполнении заявки.';
COMMENT ON COLUMN "tin"."post_order_response"."initial_order_price_pt_units" IS 'Начальная цена заявки в пунктах (для фьючерсов). / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."initial_order_price_pt_nano" IS 'Начальная цена заявки в пунктах (для фьючерсов). / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_order_response"."instrument_uid" IS 'UID идентификатор инструмента.';

CREATE TABLE IF NOT EXISTS "tin"."post_stop_order_request" (
	"quantity" bigint NOT NULL,
	"price_units" bigint NULL,
	"price_nano" integer NULL,
	"stop_price_units" bigint NULL,
	"stop_price_nano" integer NULL,
	"direction_id" bigint NULL,
	"account_id" text NOT NULL,
	"expiration_type_id" bigint NULL,
	"stop_order_type_id" bigint NULL,
	"expire_date" timestamptz NULL,
	"instrument_id" text NOT NULL,
	CONSTRAINT "post_stop_order_request_pk" PRIMARY KEY ("figi"),
	CONSTRAINT "post_stop_order_request_direction_fk" FOREIGN KEY ("direction") REFERENCES "tin"."stop_order_direction" ("id"),
	CONSTRAINT "post_stop_order_request_expiration_type_fk" FOREIGN KEY ("expiration_type") REFERENCES "tin"."stop_order_expiration_type" ("id"),
	CONSTRAINT "post_stop_order_request_stop_order_type_fk" FOREIGN KEY ("stop_order_type") REFERENCES "tin"."stop_order_type" ("id")
);
CREATE INDEX IF NOT EXISTS "post_stop_order_request_direction_idx" ON "tin"."post_stop_order_request" USING btree ("direction");
CREATE INDEX IF NOT EXISTS "post_stop_order_request_expiration_type_idx" ON "tin"."post_stop_order_request" USING btree ("expiration_type");
CREATE INDEX IF NOT EXISTS "post_stop_order_request_stop_order_type_idx" ON "tin"."post_stop_order_request" USING btree ("stop_order_type");
COMMENT ON TABLE "tin"."post_stop_order_request" IS 'Запрос выставления стоп-заявки.';
COMMENT ON COLUMN "tin"."post_stop_order_request"."quantity" IS 'Количество лотов.';
COMMENT ON COLUMN "tin"."post_stop_order_request"."price_units" IS 'Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_stop_order_request"."price_nano" IS 'Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_stop_order_request"."stop_price_units" IS 'Стоп-цена заявки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_stop_order_request"."stop_price_nano" IS 'Стоп-цена заявки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."post_stop_order_request"."direction_id" IS 'Направление операции.';
COMMENT ON COLUMN "tin"."post_stop_order_request"."account_id" IS 'Номер счёта.';
COMMENT ON COLUMN "tin"."post_stop_order_request"."expiration_type_id" IS 'Тип экспирации заявки.';
COMMENT ON COLUMN "tin"."post_stop_order_request"."stop_order_type_id" IS 'Тип заявки.';
COMMENT ON COLUMN "tin"."post_stop_order_request"."expire_date" IS 'Дата и время окончания действия стоп-заявки в часовом поясе UTC. **Для ExpirationType = GoodTillDate заполнение обязательно**.';
COMMENT ON COLUMN "tin"."post_stop_order_request"."instrument_id" IS 'Идентификатор инструмента, принимает значения Figi или instrument_uid.';

CREATE TABLE IF NOT EXISTS "tin"."share" (
	"figi" text NOT NULL,
	"ticker" text NOT NULL,
	"class_code" text NOT NULL,
	"isin" text NOT NULL,
	"lot" integer NOT NULL,
	"currency" text NOT NULL,
	"klong_units" bigint NULL,
	"klong_nano" integer NULL,
	"kshort_units" bigint NULL,
	"kshort_nano" integer NULL,
	"dlong_units" bigint NULL,
	"dlong_nano" integer NULL,
	"dshort_units" bigint NULL,
	"dshort_nano" integer NULL,
	"dlong_min_units" bigint NULL,
	"dlong_min_nano" integer NULL,
	"dshort_min_units" bigint NULL,
	"dshort_min_nano" integer NULL,
	"short_enabled_flag" bool NOT NULL,
	"name" text NOT NULL,
	"exchange" text NOT NULL,
	"ipo_date" timestamptz NULL,
	"issue_size" bigint NOT NULL,
	"country_of_risk" text NOT NULL,
	"country_of_risk_name" text NOT NULL,
	"sector" text NOT NULL,
	"issue_size_plan" bigint NOT NULL,
	"nominal_currency" text NULL,
	"nominal_units" bigint NULL,
	"nominal_nano" integer NULL,
	"trading_status_id" bigint NULL,
	"otc_flag" bool NOT NULL,
	"buy_available_flag" bool NOT NULL,
	"sell_available_flag" bool NOT NULL,
	"div_yield_flag" bool NOT NULL,
	"share_type_id" bigint NULL,
	"min_price_increment_units" bigint NULL,
	"min_price_increment_nano" integer NULL,
	"api_trade_available_flag" bool NOT NULL,
	"uid" text NOT NULL,
	"real_exchange_id" bigint NULL,
	"position_uid" text NOT NULL,
	"for_iis_flag" bool NOT NULL,
	"for_qual_investor_flag" bool NOT NULL,
	"weekend_flag" bool NOT NULL,
	"blocked_tca_flag" bool NOT NULL,
	"liquidity_flag" bool NOT NULL,
	"first_1min_candle_date" timestamptz NULL,
	"first_1day_candle_date" timestamptz NULL,
	CONSTRAINT "share_pk" PRIMARY KEY ("uid"),
	CONSTRAINT "share_trading_status_fk" FOREIGN KEY ("trading_status") REFERENCES "tin"."security_trading_status" ("id"),
	CONSTRAINT "share_share_type_fk" FOREIGN KEY ("share_type") REFERENCES "tin"."share_type" ("id"),
	CONSTRAINT "share_real_exchange_fk" FOREIGN KEY ("real_exchange") REFERENCES "tin"."real_exchange" ("id")
);
CREATE INDEX IF NOT EXISTS "share_trading_status_idx" ON "tin"."share" USING btree ("trading_status");
CREATE INDEX IF NOT EXISTS "share_share_type_idx" ON "tin"."share" USING btree ("share_type");
CREATE INDEX IF NOT EXISTS "share_real_exchange_idx" ON "tin"."share" USING btree ("real_exchange");
COMMENT ON TABLE "tin"."share" IS 'Объект передачи информации об акции.';
COMMENT ON COLUMN "tin"."share"."figi" IS 'Figi-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."share"."ticker" IS 'Тикер инструмента.';
COMMENT ON COLUMN "tin"."share"."class_code" IS 'Класс-код (секция торгов).';
COMMENT ON COLUMN "tin"."share"."isin" IS 'Isin-идентификатор инструмента.';
COMMENT ON COLUMN "tin"."share"."lot" IS 'Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру *lot*. Подробнее: [лот](https://tinkoff.github.io/investAPI/glossary#lot)';
COMMENT ON COLUMN "tin"."share"."currency" IS 'Валюта расчётов.';
COMMENT ON COLUMN "tin"."share"."klong_units" IS 'Коэффициент ставки риска длинной позиции по инструменту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."klong_nano" IS 'Коэффициент ставки риска длинной позиции по инструменту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."kshort_units" IS 'Коэффициент ставки риска короткой позиции по инструменту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."kshort_nano" IS 'Коэффициент ставки риска короткой позиции по инструменту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."dlong_units" IS 'Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."dlong_nano" IS 'Ставка риска минимальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."dshort_units" IS 'Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."dshort_nano" IS 'Ставка риска минимальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."dlong_min_units" IS 'Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."dlong_min_nano" IS 'Ставка риска начальной маржи в лонг. Подробнее: [ставка риска в лонг](https://help.tinkoff.ru/margin-trade/long/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."dshort_min_units" IS 'Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."dshort_min_nano" IS 'Ставка риска начальной маржи в шорт. Подробнее: [ставка риска в шорт](https://help.tinkoff.ru/margin-trade/short/risk-rate/) / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."short_enabled_flag" IS 'Признак доступности для операций в шорт.';
COMMENT ON COLUMN "tin"."share"."name" IS 'Название инструмента.';
COMMENT ON COLUMN "tin"."share"."exchange" IS 'Торговая площадка.';
COMMENT ON COLUMN "tin"."share"."ipo_date" IS 'Дата IPO акции в часовом поясе UTC.';
COMMENT ON COLUMN "tin"."share"."issue_size" IS 'Размер выпуска.';
COMMENT ON COLUMN "tin"."share"."country_of_risk" IS 'Код страны риска, т.е. страны, в которой компания ведёт основной бизнес.';
COMMENT ON COLUMN "tin"."share"."country_of_risk_name" IS 'Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес.';
COMMENT ON COLUMN "tin"."share"."sector" IS 'Сектор экономики.';
COMMENT ON COLUMN "tin"."share"."issue_size_plan" IS 'Плановый размер выпуска.';
COMMENT ON COLUMN "tin"."share"."nominal_currency" IS 'Номинал. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."share"."nominal_units" IS 'Номинал. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."nominal_nano" IS 'Номинал. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."trading_status_id" IS 'Текущий режим торгов инструмента.';
COMMENT ON COLUMN "tin"."share"."otc_flag" IS 'Признак внебиржевой ценной бумаги.';
COMMENT ON COLUMN "tin"."share"."buy_available_flag" IS 'Признак доступности для покупки.';
COMMENT ON COLUMN "tin"."share"."sell_available_flag" IS 'Признак доступности для продажи.';
COMMENT ON COLUMN "tin"."share"."div_yield_flag" IS 'Признак наличия дивидендной доходности.';
COMMENT ON COLUMN "tin"."share"."share_type_id" IS 'Тип акции. Возможные значения: [ShareType](https://tinkoff.github.io/investAPI/instruments#sharetype)';
COMMENT ON COLUMN "tin"."share"."min_price_increment_units" IS 'Шаг цены. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."min_price_increment_nano" IS 'Шаг цены. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."share"."api_trade_available_flag" IS 'Параметр указывает на возможность торговать инструментом через API.';
COMMENT ON COLUMN "tin"."share"."uid" IS 'Уникальный идентификатор инструмента.';
COMMENT ON COLUMN "tin"."share"."real_exchange_id" IS 'Реальная площадка исполнения расчётов.';
COMMENT ON COLUMN "tin"."share"."position_uid" IS 'Уникальный идентификатор позиции инструмента.';
COMMENT ON COLUMN "tin"."share"."for_iis_flag" IS 'Признак доступности для ИИС.';
COMMENT ON COLUMN "tin"."share"."for_qual_investor_flag" IS 'Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов.';
COMMENT ON COLUMN "tin"."share"."weekend_flag" IS 'Флаг отображающий доступность торговли инструментом по выходным';
COMMENT ON COLUMN "tin"."share"."blocked_tca_flag" IS 'Флаг заблокированного ТКС';
COMMENT ON COLUMN "tin"."share"."liquidity_flag" IS 'Флаг достаточной ликвидности';
COMMENT ON COLUMN "tin"."share"."first_1min_candle_date" IS 'Дата первой минутной свечи.';
COMMENT ON COLUMN "tin"."share"."first_1day_candle_date" IS 'Дата первой дневной свечи.';

CREATE TABLE IF NOT EXISTS "tin"."option" (
	"uid" text NOT NULL,
	"position_uid" text NOT NULL,
	"ticker" text NOT NULL,
	"class_code" text NOT NULL,
	"basic_asset_position_uid" text NOT NULL,
	"trading_status_id" bigint NULL,
	"real_exchange_id" bigint NULL,
	"direction_id" bigint NULL,
	"payment_type_id" bigint NULL,
	"style_id" bigint NULL,
	"settlement_type_id" bigint NULL,
	"name" text NOT NULL,
	"currency" text NOT NULL,
	"settlement_currency" text NOT NULL,
	"asset_type" text NOT NULL,
	"basic_asset" text NOT NULL,
	"exchange" text NOT NULL,
	"country_of_risk" text NOT NULL,
	"country_of_risk_name" text NOT NULL,
	"sector" text NOT NULL,
	"lot" integer NOT NULL,
	"basic_asset_size_units" bigint NULL,
	"basic_asset_size_nano" integer NULL,
	"klong_units" bigint NULL,
	"klong_nano" integer NULL,
	"kshort_units" bigint NULL,
	"kshort_nano" integer NULL,
	"dlong_units" bigint NULL,
	"dlong_nano" integer NULL,
	"dshort_units" bigint NULL,
	"dshort_nano" integer NULL,
	"dlong_min_units" bigint NULL,
	"dlong_min_nano" integer NULL,
	"dshort_min_units" bigint NULL,
	"dshort_min_nano" integer NULL,
	"min_price_increment_units" bigint NULL,
	"min_price_increment_nano" integer NULL,
	"strike_price_currency" text NULL,
	"strike_price_units" bigint NULL,
	"strike_price_nano" integer NULL,
	"expiration_date" timestamptz NULL,
	"first_trade_date" timestamptz NULL,
	"last_trade_date" timestamptz NULL,
	"first_1min_candle_date" timestamptz NULL,
	"first_1day_candle_date" timestamptz NULL,
	"short_enabled_flag" bool NOT NULL,
	"for_iis_flag" bool NOT NULL,
	"otc_flag" bool NOT NULL,
	"buy_available_flag" bool NOT NULL,
	"sell_available_flag" bool NOT NULL,
	"for_qual_investor_flag" bool NOT NULL,
	"weekend_flag" bool NOT NULL,
	"blocked_tca_flag" bool NOT NULL,
	"api_trade_available_flag" bool NOT NULL,
	CONSTRAINT "option_pk" PRIMARY KEY ("uid"),
	CONSTRAINT "option_trading_status_fk" FOREIGN KEY ("trading_status") REFERENCES "tin"."security_trading_status" ("id"),
	CONSTRAINT "option_real_exchange_fk" FOREIGN KEY ("real_exchange") REFERENCES "tin"."real_exchange" ("id"),
	CONSTRAINT "option_direction_fk" FOREIGN KEY ("direction") REFERENCES "tin"."option_direction" ("id"),
	CONSTRAINT "option_payment_type_fk" FOREIGN KEY ("payment_type") REFERENCES "tin"."option_payment_type" ("id"),
	CONSTRAINT "option_style_fk" FOREIGN KEY ("style") REFERENCES "tin"."option_style" ("id"),
	CONSTRAINT "option_settlement_type_fk" FOREIGN KEY ("settlement_type") REFERENCES "tin"."option_settlement_type" ("id")
);
CREATE INDEX IF NOT EXISTS "option_trading_status_idx" ON "tin"."option" USING btree ("trading_status");
CREATE INDEX IF NOT EXISTS "option_real_exchange_idx" ON "tin"."option" USING btree ("real_exchange");
CREATE INDEX IF NOT EXISTS "option_direction_idx" ON "tin"."option" USING btree ("direction");
CREATE INDEX IF NOT EXISTS "option_payment_type_idx" ON "tin"."option" USING btree ("payment_type");
CREATE INDEX IF NOT EXISTS "option_style_idx" ON "tin"."option" USING btree ("style");
CREATE INDEX IF NOT EXISTS "option_settlement_type_idx" ON "tin"."option" USING btree ("settlement_type");
COMMENT ON TABLE "tin"."option" IS 'Опцион.';
COMMENT ON COLUMN "tin"."option"."uid" IS 'Уникальный идентификатор инструмента.';
COMMENT ON COLUMN "tin"."option"."position_uid" IS 'Уникальный идентификатор позиции.';
COMMENT ON COLUMN "tin"."option"."ticker" IS 'Тикер инструмента.';
COMMENT ON COLUMN "tin"."option"."class_code" IS 'Класс-код.';
COMMENT ON COLUMN "tin"."option"."basic_asset_position_uid" IS 'Уникальный идентификатор позиции основного инструмента.';
COMMENT ON COLUMN "tin"."option"."trading_status_id" IS 'Текущий режим торгов инструмента.';
COMMENT ON COLUMN "tin"."option"."real_exchange_id" IS 'Реальная площадка исполнения расчётов. Допустимые значения: [REAL_EXCHANGE_MOEX, REAL_EXCHANGE_RTS]';
COMMENT ON COLUMN "tin"."option"."direction_id" IS 'Направление опциона.';
COMMENT ON COLUMN "tin"."option"."payment_type_id" IS 'Тип расчетов по опциону.';
COMMENT ON COLUMN "tin"."option"."style_id" IS 'Стиль опциона.';
COMMENT ON COLUMN "tin"."option"."settlement_type_id" IS 'Способ исполнения опциона.';
COMMENT ON COLUMN "tin"."option"."name" IS 'Название инструмента.';
COMMENT ON COLUMN "tin"."option"."currency" IS 'Валюта.';
COMMENT ON COLUMN "tin"."option"."settlement_currency" IS 'Валюта, в которой оценивается контракт.';
COMMENT ON COLUMN "tin"."option"."asset_type" IS 'Тип актива.';
COMMENT ON COLUMN "tin"."option"."basic_asset" IS 'Основной актив.';
COMMENT ON COLUMN "tin"."option"."exchange" IS 'Биржа.';
COMMENT ON COLUMN "tin"."option"."country_of_risk" IS 'Код страны рисков.';
COMMENT ON COLUMN "tin"."option"."country_of_risk_name" IS 'Наименование страны рисков.';
COMMENT ON COLUMN "tin"."option"."sector" IS 'Сектор экономики.';
COMMENT ON COLUMN "tin"."option"."lot" IS 'Количество бумаг в лоте.';
COMMENT ON COLUMN "tin"."option"."basic_asset_size_units" IS 'Размер основного актива. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."basic_asset_size_nano" IS 'Размер основного актива. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."klong_units" IS 'Коэффициент ставки риска длинной позиции по клиенту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."klong_nano" IS 'Коэффициент ставки риска длинной позиции по клиенту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."kshort_units" IS 'Коэффициент ставки риска короткой позиции по клиенту. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."kshort_nano" IS 'Коэффициент ставки риска короткой позиции по клиенту. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."dlong_units" IS 'Ставка риска минимальной маржи лонг. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."dlong_nano" IS 'Ставка риска минимальной маржи лонг. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."dshort_units" IS 'Ставка риска минимальной маржи шорт. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."dshort_nano" IS 'Ставка риска минимальной маржи шорт. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."dlong_min_units" IS 'Ставка риска начальной маржи лонг. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."dlong_min_nano" IS 'Ставка риска начальной маржи лонг. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."dshort_min_units" IS 'Ставка риска начальной маржи шорт. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."dshort_min_nano" IS 'Ставка риска начальной маржи шорт. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."min_price_increment_units" IS 'Минимальный шаг цены. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."min_price_increment_nano" IS 'Минимальный шаг цены. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."strike_price_currency" IS 'Цена страйка. / строковый ISO-код валюты';
COMMENT ON COLUMN "tin"."option"."strike_price_units" IS 'Цена страйка. / целая часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."strike_price_nano" IS 'Цена страйка. / дробная часть суммы, может быть отрицательным числом';
COMMENT ON COLUMN "tin"."option"."expiration_date" IS 'Дата истечения срока в формате UTC.';
COMMENT ON COLUMN "tin"."option"."first_trade_date" IS 'Дата начала обращения контракта в формате UTC.';
COMMENT ON COLUMN "tin"."option"."last_trade_date" IS 'Дата исполнения в формате UTC.';
COMMENT ON COLUMN "tin"."option"."first_1min_candle_date" IS 'Дата первой минутной свечи в формате UTC.';
COMMENT ON COLUMN "tin"."option"."first_1day_candle_date" IS 'Дата первой дневной свечи в формате UTC.';
COMMENT ON COLUMN "tin"."option"."short_enabled_flag" IS 'Признак доступности для операций шорт.';
COMMENT ON COLUMN "tin"."option"."for_iis_flag" IS 'Возможность покупки/продажи на ИИС.';
COMMENT ON COLUMN "tin"."option"."otc_flag" IS 'Признак внебиржевой ценной бумаги.';
COMMENT ON COLUMN "tin"."option"."buy_available_flag" IS 'Признак доступности для покупки.';
COMMENT ON COLUMN "tin"."option"."sell_available_flag" IS 'Признак доступности для продажи.';
COMMENT ON COLUMN "tin"."option"."for_qual_investor_flag" IS 'Флаг отображающий доступность торговли инструментом только для квалифицированных инвесторов.';
COMMENT ON COLUMN "tin"."option"."weekend_flag" IS 'Флаг отображающий доступность торговли инструментом по выходным.';
COMMENT ON COLUMN "tin"."option"."blocked_tca_flag" IS 'Флаг заблокированного ТКС.';
COMMENT ON COLUMN "tin"."option"."api_trade_available_flag" IS 'Параметр указывает на возможность торговать инструментом через API.';

